{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\n\n\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", null);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n\n      var events = _this._events;\n\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n\n        var event = events[i];\n\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n\n          case 'error':\n            sink.error(event.error);\n            break;\n\n          case 'next':\n            sink.next(event.data);\n            break;\n\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n\n  var _proto = RelayReplaySubject.prototype;\n\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'complete'\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n\n  _proto.subscribe = function subscribe(observer) {\n    this._subscription = this._observable.subscribe(observer);\n    return this._subscription;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n\n      this._subscription = null;\n    }\n  };\n\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n\n  return RelayReplaySubject;\n}();\n\nmodule.exports = RelayReplaySubject;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/util/RelayReplaySubject.js"],"names":["_interopRequireDefault","require","_defineProperty2","RelayObservable","invariant","RelayReplaySubject","_this","Set","_observable","create","sink","_sinks","add","events","_events","i","length","closed","event","kind","complete","error","next","data","process","env","NODE_ENV","_proto","prototype","_complete","push","forEach","_error","subscribe","observer","_subscription","unsubscribe","getObserverCount","size","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", null);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n\n      var events = _this._events;\n\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n\n        var event = events[i];\n\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n\n          case 'error':\n            sink.error(event.error);\n            break;\n\n          case 'next':\n            sink.next(event.data);\n            break;\n\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n\n  var _proto = RelayReplaySubject.prototype;\n\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'complete'\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n\n  _proto.subscribe = function subscribe(observer) {\n    this._subscription = this._observable.subscribe(observer);\n    return this._subscription;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n\n      this._subscription = null;\n    }\n  };\n\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n\n  return RelayReplaySubject;\n}();\n\nmodule.exports = RelayReplaySubject;"]},"metadata":{},"sourceType":"script"}