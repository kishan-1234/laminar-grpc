{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = _objectSpread({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nmodule.exports = {\n  create: create\n};","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js"],"names":["_interopRequireDefault","require","_defineProperty2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","RelayRecordSource","UNPUBLISH_RECORD_SENTINEL","freeze","__UNPUBLISH_RECORD_SENTINEL","RelayOptimisticRecordSource","base","_base","_sink","create","_proto","prototype","has","dataID","sinkRecord","get","undefined","getStatus","record","clear","_delete","remove","set","getRecordIDs","toJSON","size","_this","merged","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = _objectSpread({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nmodule.exports = {\n  create: create\n};"]},"metadata":{},"sourceType":"script"}