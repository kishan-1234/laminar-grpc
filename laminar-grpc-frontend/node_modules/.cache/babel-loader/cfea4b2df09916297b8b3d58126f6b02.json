{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { updateGroupsExpanded } from '../../actionCreators';\nimport defaultOptions from '../../defaultOptions';\nimport { getElementCustomization } from '../../Utils/ComponentUtils';\nimport EmptyCells from '../EmptyCells/EmptyCells';\n\nvar GroupRowContent = function (props) {\n  var childComponents = props.childComponents,\n      contentColSpan = props.contentColSpan,\n      dispatch = props.dispatch,\n      groupIndex = props.groupIndex,\n      groupKey = props.groupKey,\n      isExpanded = props.isExpanded,\n      text = props.text;\n\n  var _a = getElementCustomization({\n    className: defaultOptions.css.groupCell,\n    colSpan: contentColSpan\n  }, props, childComponents.groupCell),\n      elementAttributes = _a.elementAttributes,\n      content = _a.content;\n\n  return React.createElement(React.Fragment, null, React.createElement(EmptyCells, {\n    count: groupIndex\n  }), React.createElement(\"td\", __assign({}, elementAttributes), React.createElement(\"div\", {\n    className: 'ka-group-cell-content'\n  }, React.createElement(\"div\", {\n    onClick: function () {\n      dispatch(updateGroupsExpanded(groupKey));\n    },\n    className: isExpanded ? defaultOptions.css.iconGroupArrowExpanded : defaultOptions.css.iconGroupArrowCollapsed\n  }), content || React.createElement(\"div\", {\n    className: 'ka-group-text'\n  }, text))));\n};\n\nexport default GroupRowContent;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Components/GroupRowContent/GroupRowContent.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","updateGroupsExpanded","defaultOptions","getElementCustomization","EmptyCells","GroupRowContent","props","childComponents","contentColSpan","dispatch","groupIndex","groupKey","isExpanded","text","_a","className","css","groupCell","colSpan","elementAttributes","content","createElement","Fragment","count","onClick","iconGroupArrowExpanded","iconGroupArrowCollapsed"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiB;AACnC,MAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;AAAA,MAA6CC,cAAc,GAAGF,KAAK,CAACE,cAApE;AAAA,MAAoFC,QAAQ,GAAGH,KAAK,CAACG,QAArG;AAAA,MAA+GC,UAAU,GAAGJ,KAAK,CAACI,UAAlI;AAAA,MAA8IC,QAAQ,GAAGL,KAAK,CAACK,QAA/J;AAAA,MAAyKC,UAAU,GAAGN,KAAK,CAACM,UAA5L;AAAA,MAAwMC,IAAI,GAAGP,KAAK,CAACO,IAArN;;AACA,MAAIC,EAAE,GAAGX,uBAAuB,CAAC;AAC7BY,IAAAA,SAAS,EAAEb,cAAc,CAACc,GAAf,CAAmBC,SADD;AAE7BC,IAAAA,OAAO,EAAEV;AAFoB,GAAD,EAG7BF,KAH6B,EAGtBC,eAAe,CAACU,SAHM,CAAhC;AAAA,MAGsCE,iBAAiB,GAAGL,EAAE,CAACK,iBAH7D;AAAA,MAGgFC,OAAO,GAAGN,EAAE,CAACM,OAH7F;;AAIA,SAAQpB,KAAK,CAACqB,aAAN,CAAoBrB,KAAK,CAACsB,QAA1B,EAAoC,IAApC,EACJtB,KAAK,CAACqB,aAAN,CAAoBjB,UAApB,EAAgC;AAAEmB,IAAAA,KAAK,EAAEb;AAAT,GAAhC,CADI,EAEJV,KAAK,CAACqB,aAAN,CAAoB,IAApB,EAA0BnC,QAAQ,CAAC,EAAD,EAAKiC,iBAAL,CAAlC,EACInB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEN,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACIf,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEG,IAAAA,OAAO,EAAE,YAAY;AAC1Cf,MAAAA,QAAQ,CAACR,oBAAoB,CAACU,QAAD,CAArB,CAAR;AACH,KAFsB;AAEpBI,IAAAA,SAAS,EAAEH,UAAU,GAClBV,cAAc,CAACc,GAAf,CAAmBS,sBADD,GAC0BvB,cAAc,CAACc,GAAf,CAAmBU;AAH9C,GAA3B,CADJ,EAKIN,OAAO,IAAIpB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEN,IAAAA,SAAS,EAAE;AAAb,GAA3B,EAA2DF,IAA3D,CALf,CADJ,CAFI,CAAR;AASH,CAfD;;AAgBA,eAAeR,eAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { updateGroupsExpanded } from '../../actionCreators';\nimport defaultOptions from '../../defaultOptions';\nimport { getElementCustomization } from '../../Utils/ComponentUtils';\nimport EmptyCells from '../EmptyCells/EmptyCells';\nvar GroupRowContent = function (props) {\n    var childComponents = props.childComponents, contentColSpan = props.contentColSpan, dispatch = props.dispatch, groupIndex = props.groupIndex, groupKey = props.groupKey, isExpanded = props.isExpanded, text = props.text;\n    var _a = getElementCustomization({\n        className: defaultOptions.css.groupCell,\n        colSpan: contentColSpan\n    }, props, childComponents.groupCell), elementAttributes = _a.elementAttributes, content = _a.content;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EmptyCells, { count: groupIndex }),\n        React.createElement(\"td\", __assign({}, elementAttributes),\n            React.createElement(\"div\", { className: 'ka-group-cell-content' },\n                React.createElement(\"div\", { onClick: function () {\n                        dispatch(updateGroupsExpanded(groupKey));\n                    }, className: isExpanded\n                        ? defaultOptions.css.iconGroupArrowExpanded : defaultOptions.css.iconGroupArrowCollapsed }),\n                content || React.createElement(\"div\", { className: 'ka-group-text' }, text)))));\n};\nexport default GroupRowContent;"]},"metadata":{},"sourceType":"module"}