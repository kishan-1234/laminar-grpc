{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n\n    var _iterator = _createForOfIteratorHelper(connectionInfo),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = [];\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = _createForOfIteratorHelper(deletedIDFieldName),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iterator3 = _createForOfIteratorHelper(connectionKeys),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js"],"names":["_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","ConnectionHandler","require","warning","MutationTypes","freeze","RANGE_ADD","RANGE_DELETE","NODE_DELETE","RangeOperations","APPEND","PREPEND","convert","configs","request","optimisticUpdater","updater","configOptimisticUpdates","configUpdates","forEach","config","type","nodeDeleteResult","nodeDelete","push","rangeAddResult","rangeAdd","rangeDeleteResult","rangeDelete","store","data","eachOptimisticUpdater","eachUpdater","deletedIDFieldName","rootField","getRootField","payload","deleteID","getValue","deleteIDs","id","parentID","connectionInfo","edgeName","process","env","NODE_ENV","parent","get","serverEdge","getLinkedRecord","_iterator","_step","info","connection","getConnection","key","filters","clientEdge","buildConnectionEdge","rangeBehavior","insertEdgeAfter","insertEdgeBefore","connectionKeys","pathToConnection","deletedIDField","_iterator2","_step2","eachField","idObject","deleteNode","recordProxy","_iterator3","_step3","_loop","fragment","selections","kind","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,SAASA,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCD,CAAC,CAACC,MAAM,CAACC,QAAR,CAAD,IAAsB,IAA3D,EAAiE;AAAE,QAAIC,KAAK,CAACC,OAAN,CAAcJ,CAAd,MAAqBA,CAAC,GAAGK,2BAA2B,CAACL,CAAD,CAApD,CAAJ,EAA8D;AAAE,UAAIM,CAAC,GAAG,CAAR;;AAAW,UAAIC,CAAC,GAAG,SAASA,CAAT,GAAa,CAAE,CAAvB;;AAAyB,aAAO;AAAEC,QAAAA,CAAC,EAAED,CAAL;AAAQE,QAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAE,cAAIH,CAAC,IAAIN,CAAC,CAACU,MAAX,EAAmB,OAAO;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAP;AAAuB,iBAAO;AAAEA,YAAAA,IAAI,EAAE,KAAR;AAAeC,YAAAA,KAAK,EAAEZ,CAAC,CAACM,CAAC,EAAF;AAAvB,WAAP;AAAwC,SAA5G;AAA8GO,QAAAA,CAAC,EAAE,SAASA,CAAT,CAAWC,EAAX,EAAe;AAAE,gBAAMA,EAAN;AAAW,SAA7I;AAA+IC,QAAAA,CAAC,EAAER;AAAlJ,OAAP;AAA+J;;AAAC,UAAM,IAAIS,SAAJ,CAAc,uIAAd,CAAN;AAA+J;;AAAC,MAAIC,EAAJ;AAAA,MAAQC,gBAAgB,GAAG,IAA3B;AAAA,MAAiCC,MAAM,GAAG,KAA1C;AAAA,MAAiDC,GAAjD;AAAsD,SAAO;AAAEZ,IAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAES,MAAAA,EAAE,GAAGjB,CAAC,CAACC,MAAM,CAACC,QAAR,CAAD,EAAL;AAA4B,KAAhD;AAAkDO,IAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAE,UAAIY,IAAI,GAAGJ,EAAE,CAACK,IAAH,EAAX;AAAsBJ,MAAAA,gBAAgB,GAAGG,IAAI,CAACV,IAAxB;AAA8B,aAAOU,IAAP;AAAc,KAAtI;AAAwIR,IAAAA,CAAC,EAAE,SAASA,CAAT,CAAWU,GAAX,EAAgB;AAAEJ,MAAAA,MAAM,GAAG,IAAT;AAAeC,MAAAA,GAAG,GAAGG,GAAN;AAAY,KAAxL;AAA0LR,IAAAA,CAAC,EAAE,SAASA,CAAT,GAAa;AAAE,UAAI;AAAE,YAAI,CAACG,gBAAD,IAAqBD,EAAE,CAAC,QAAD,CAAF,IAAgB,IAAzC,EAA+CA,EAAE,CAAC,QAAD,CAAF;AAAiB,OAAtE,SAA+E;AAAE,YAAIE,MAAJ,EAAY,MAAMC,GAAN;AAAY;AAAE;AAAvT,GAAP;AAAmU;;AAEz4B,SAASf,2BAAT,CAAqCL,CAArC,EAAwCwB,MAAxC,EAAgD;AAAE,MAAI,CAACxB,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOyB,iBAAiB,CAACzB,CAAD,EAAIwB,MAAJ,CAAxB;AAAqC,MAAIf,CAAC,GAAGiB,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+B7B,CAA/B,EAAkC8B,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIrB,CAAC,KAAK,QAAN,IAAkBT,CAAC,CAAC+B,WAAxB,EAAqCtB,CAAC,GAAGT,CAAC,CAAC+B,WAAF,CAAcC,IAAlB;AAAwB,MAAIvB,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAON,KAAK,CAAC8B,IAAN,CAAWxB,CAAX,CAAP;AAAsB,MAAIA,CAAC,KAAK,WAAN,IAAqB,2CAA2CyB,IAA3C,CAAgDzB,CAAhD,CAAzB,EAA6E,OAAOgB,iBAAiB,CAACzB,CAAD,EAAIwB,MAAJ,CAAxB;AAAsC;;AAEha,SAASC,iBAAT,CAA2BU,GAA3B,EAAgCC,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGD,GAAG,CAACzB,MAA7B,EAAqC0B,GAAG,GAAGD,GAAG,CAACzB,MAAV;;AAAkB,OAAK,IAAIJ,CAAC,GAAG,CAAR,EAAW+B,IAAI,GAAG,IAAIlC,KAAJ,CAAUiC,GAAV,CAAvB,EAAuC9B,CAAC,GAAG8B,GAA3C,EAAgD9B,CAAC,EAAjD,EAAqD;AAAE+B,IAAAA,IAAI,CAAC/B,CAAD,CAAJ,GAAU6B,GAAG,CAAC7B,CAAD,CAAb;AAAmB;;AAAC,SAAO+B,IAAP;AAAc;;AAEvL,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,0CAAD,CAA/B;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAIE,aAAa,GAAGf,MAAM,CAACgB,MAAP,CAAc;AAChCC,EAAAA,SAAS,EAAE,WADqB;AAEhCC,EAAAA,YAAY,EAAE,cAFkB;AAGhCC,EAAAA,WAAW,EAAE;AAHmB,CAAd,CAApB;AAKA,IAAIC,eAAe,GAAGpB,MAAM,CAACgB,MAAP,CAAc;AAClCK,EAAAA,MAAM,EAAE,QAD0B;AAElCC,EAAAA,OAAO,EAAE;AAFyB,CAAd,CAAtB;;AAKA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,iBAAnC,EAAsDC,OAAtD,EAA+D;AAC7D,MAAIC,uBAAuB,GAAGF,iBAAiB,GAAG,CAACA,iBAAD,CAAH,GAAyB,EAAxE;AACA,MAAIG,aAAa,GAAGF,OAAO,GAAG,CAACA,OAAD,CAAH,GAAe,EAA1C;AACAH,EAAAA,OAAO,CAACM,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,aAAL;AACE,YAAIC,gBAAgB,GAAGC,UAAU,CAACH,MAAD,EAASN,OAAT,CAAjC;;AAEA,YAAIQ,gBAAJ,EAAsB;AACpBL,UAAAA,uBAAuB,CAACO,IAAxB,CAA6BF,gBAA7B;AACAJ,UAAAA,aAAa,CAACM,IAAd,CAAmBF,gBAAnB;AACD;;AAED;;AAEF,WAAK,WAAL;AACE,YAAIG,cAAc,GAAGC,QAAQ,CAACN,MAAD,EAASN,OAAT,CAA7B;;AAEA,YAAIW,cAAJ,EAAoB;AAClBR,UAAAA,uBAAuB,CAACO,IAAxB,CAA6BC,cAA7B;AACAP,UAAAA,aAAa,CAACM,IAAd,CAAmBC,cAAnB;AACD;;AAED;;AAEF,WAAK,cAAL;AACE,YAAIE,iBAAiB,GAAGC,WAAW,CAACR,MAAD,EAASN,OAAT,CAAnC;;AAEA,YAAIa,iBAAJ,EAAuB;AACrBV,UAAAA,uBAAuB,CAACO,IAAxB,CAA6BG,iBAA7B;AACAT,UAAAA,aAAa,CAACM,IAAd,CAAmBG,iBAAnB;AACD;;AAED;AA7BJ;AA+BD,GAhCD;AAiCA,SAAO;AACLZ,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,CAA2Bc,KAA3B,EAAkCC,IAAlC,EAAwC;AACzDb,MAAAA,uBAAuB,CAACE,OAAxB,CAAgC,UAAUY,qBAAV,EAAiC;AAC/DA,QAAAA,qBAAqB,CAACF,KAAD,EAAQC,IAAR,CAArB;AACD,OAFD;AAGD,KALI;AAMLd,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBa,KAAjB,EAAwBC,IAAxB,EAA8B;AACrCZ,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUa,WAAV,EAAuB;AAC3CA,QAAAA,WAAW,CAACH,KAAD,EAAQC,IAAR,CAAX;AACD,OAFD;AAGD;AAVI,GAAP;AAYD;;AAED,SAASP,UAAT,CAAoBH,MAApB,EAA4BN,OAA5B,EAAqC;AACnC,MAAImB,kBAAkB,GAAGb,MAAM,CAACa,kBAAhC;AACA,MAAIC,SAAS,GAAGC,YAAY,CAACrB,OAAD,CAA5B;;AAEA,MAAI,CAACoB,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,SAAO,UAAUL,KAAV,EAAiBC,IAAjB,EAAuB;AAC5B,QAAIM,OAAO,GAAGP,KAAK,CAACM,YAAN,CAAmBD,SAAnB,CAAd;;AAEA,QAAI,CAACE,OAAL,EAAc;AACZ;AACD;;AAED,QAAIC,QAAQ,GAAGD,OAAO,CAACE,QAAR,CAAiBL,kBAAjB,CAAf;AACA,QAAIM,SAAS,GAAGzE,KAAK,CAACC,OAAN,CAAcsE,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAArD;AACAE,IAAAA,SAAS,CAACpB,OAAV,CAAkB,UAAUqB,EAAV,EAAc;AAC9B,UAAIA,EAAE,IAAI,OAAOA,EAAP,KAAc,QAAxB,EAAkC;AAChCX,QAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBW,EAAhB;AACD;AACF,KAJD;AAKD,GAdD;AAeD;;AAED,SAASd,QAAT,CAAkBN,MAAlB,EAA0BN,OAA1B,EAAmC;AACjC,MAAI2B,QAAQ,GAAGrB,MAAM,CAACqB,QAAtB;AAAA,MACIC,cAAc,GAAGtB,MAAM,CAACsB,cAD5B;AAAA,MAEIC,QAAQ,GAAGvB,MAAM,CAACuB,QAFtB;;AAIA,MAAI,CAACF,QAAL,EAAe;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3C,OAAO,CAAC,KAAD,EAAQ,mEAAmE,qCAA3E,CAA/C,GAAmK,KAAK,CAAxK;AACA,WAAO,IAAP;AACD;;AAED,MAAI+B,SAAS,GAAGC,YAAY,CAACrB,OAAD,CAA5B;;AAEA,MAAI,CAAC4B,cAAD,IAAmB,CAACR,SAAxB,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,SAAO,UAAUL,KAAV,EAAiBC,IAAjB,EAAuB;AAC5B,QAAIiB,MAAM,GAAGlB,KAAK,CAACmB,GAAN,CAAUP,QAAV,CAAb;;AAEA,QAAI,CAACM,MAAL,EAAa;AACX;AACD;;AAED,QAAIX,OAAO,GAAGP,KAAK,CAACM,YAAN,CAAmBD,SAAnB,CAAd;;AAEA,QAAI,CAACE,OAAL,EAAc;AACZ;AACD;;AAED,QAAIa,UAAU,GAAGb,OAAO,CAACc,eAAR,CAAwBP,QAAxB,CAAjB;;AAEA,QAAIQ,SAAS,GAAGzF,0BAA0B,CAACgF,cAAD,CAA1C;AAAA,QACIU,KADJ;;AAGA,QAAI;AACF,WAAKD,SAAS,CAAChF,CAAV,EAAL,EAAoB,CAAC,CAACiF,KAAK,GAAGD,SAAS,CAAC/E,CAAV,EAAT,EAAwBE,IAA7C,GAAoD;AAClD,YAAI+E,IAAI,GAAGD,KAAK,CAAC7E,KAAjB;;AAEA,YAAI,CAAC0E,UAAL,EAAiB;AACf;AACD;;AAED,YAAIK,UAAU,GAAGrD,iBAAiB,CAACsD,aAAlB,CAAgCR,MAAhC,EAAwCM,IAAI,CAACG,GAA7C,EAAkDH,IAAI,CAACI,OAAvD,CAAjB;;AAEA,YAAI,CAACH,UAAL,EAAiB;AACf;AACD;;AAED,YAAII,UAAU,GAAGzD,iBAAiB,CAAC0D,mBAAlB,CAAsC9B,KAAtC,EAA6CyB,UAA7C,EAAyDL,UAAzD,CAAjB;;AAEA,YAAI,CAACS,UAAL,EAAiB;AACf;AACD;;AAED,gBAAQL,IAAI,CAACO,aAAb;AACE,eAAK,QAAL;AACE3D,YAAAA,iBAAiB,CAAC4D,eAAlB,CAAkCP,UAAlC,EAA8CI,UAA9C;AACA;;AAEF,eAAK,SAAL;AACEzD,YAAAA,iBAAiB,CAAC6D,gBAAlB,CAAmCR,UAAnC,EAA+CI,UAA/C;AACA;;AAEF;AACEd,YAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3C,OAAO,CAAC,KAAD,EAAQ,mEAAmE,4DAAnE,GAAkI,oCAA1I,EAAgLkD,IAAI,CAACO,aAArL,CAA/C,GAAqP,KAAK,CAA1P;AACA;AAXJ;AAaD;AACF,KAlCD,CAkCE,OAAO7E,GAAP,EAAY;AACZoE,MAAAA,SAAS,CAAC3E,CAAV,CAAYO,GAAZ;AACD,KApCD,SAoCU;AACRoE,MAAAA,SAAS,CAACzE,CAAV;AACD;AACF,GAzDD;AA0DD;;AAED,SAASkD,WAAT,CAAqBR,MAArB,EAA6BN,OAA7B,EAAsC;AACpC,MAAI2B,QAAQ,GAAGrB,MAAM,CAACqB,QAAtB;AAAA,MACIsB,cAAc,GAAG3C,MAAM,CAAC2C,cAD5B;AAAA,MAEIC,gBAAgB,GAAG5C,MAAM,CAAC4C,gBAF9B;AAAA,MAGI/B,kBAAkB,GAAGb,MAAM,CAACa,kBAHhC;;AAKA,MAAI,CAACQ,QAAL,EAAe;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3C,OAAO,CAAC,KAAD,EAAQ,sEAAsE,qCAA9E,CAA/C,GAAsK,KAAK,CAA3K;AACA,WAAO,IAAP;AACD;;AAED,MAAI+B,SAAS,GAAGC,YAAY,CAACrB,OAAD,CAA5B;;AAEA,MAAI,CAACoB,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,SAAO,UAAUL,KAAV,EAAiBC,IAAjB,EAAuB;AAC5B,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,QAAIS,SAAS,GAAG,EAAhB;AACA,QAAI0B,cAAc,GAAGnC,IAAI,CAACI,SAAD,CAAzB;;AAEA,QAAI+B,cAAc,IAAInG,KAAK,CAACC,OAAN,CAAckE,kBAAd,CAAtB,EAAyD;AACvD,UAAIiC,UAAU,GAAGxG,0BAA0B,CAACuE,kBAAD,CAA3C;AAAA,UACIkC,MADJ;;AAGA,UAAI;AACF,aAAKD,UAAU,CAAC/F,CAAX,EAAL,EAAqB,CAAC,CAACgG,MAAM,GAAGD,UAAU,CAAC9F,CAAX,EAAV,EAA0BE,IAAhD,GAAuD;AACrD,cAAI8F,SAAS,GAAGD,MAAM,CAAC5F,KAAvB;;AAEA,cAAI0F,cAAc,IAAI,OAAOA,cAAP,KAA0B,QAAhD,EAA0D;AACxDA,YAAAA,cAAc,GAAGA,cAAc,CAACG,SAAD,CAA/B;AACD;AACF;AACF,OARD,CAQE,OAAOrF,GAAP,EAAY;AACZmF,QAAAA,UAAU,CAAC1F,CAAX,CAAaO,GAAb;AACD,OAVD,SAUU;AACRmF,QAAAA,UAAU,CAACxF,CAAX;AACD;;AAED,UAAIZ,KAAK,CAACC,OAAN,CAAckG,cAAd,CAAJ,EAAmC;AACjCA,QAAAA,cAAc,CAAC9C,OAAf,CAAuB,UAAUkD,QAAV,EAAoB;AACzC,cAAIA,QAAQ,IAAIA,QAAQ,CAAC7B,EAArB,IAA2B,OAAO6B,QAAP,KAAoB,QAA/C,IAA2D,OAAOA,QAAQ,CAAC7B,EAAhB,KAAuB,QAAtF,EAAgG;AAC9FD,YAAAA,SAAS,CAACf,IAAV,CAAe6C,QAAQ,CAAC7B,EAAxB;AACD;AACF,SAJD;AAKD,OAND,MAMO,IAAIyB,cAAc,IAAIA,cAAc,CAACzB,EAAjC,IAAuC,OAAOyB,cAAc,CAACzB,EAAtB,KAA6B,QAAxE,EAAkF;AACvFD,QAAAA,SAAS,CAACf,IAAV,CAAeyC,cAAc,CAACzB,EAA9B;AACD;AACF,KA3BD,MA2BO,IAAIyB,cAAc,IAAI,OAAOhC,kBAAP,KAA8B,QAAhD,IAA4D,OAAOgC,cAAP,KAA0B,QAA1F,EAAoG;AACzGA,MAAAA,cAAc,GAAGA,cAAc,CAAChC,kBAAD,CAA/B;;AAEA,UAAI,OAAOgC,cAAP,KAA0B,QAA9B,EAAwC;AACtC1B,QAAAA,SAAS,CAACf,IAAV,CAAeyC,cAAf;AACD,OAFD,MAEO,IAAInG,KAAK,CAACC,OAAN,CAAckG,cAAd,CAAJ,EAAmC;AACxCA,QAAAA,cAAc,CAAC9C,OAAf,CAAuB,UAAUqB,EAAV,EAAc;AACnC,cAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1BD,YAAAA,SAAS,CAACf,IAAV,CAAegB,EAAf;AACD;AACF,SAJD;AAKD;AACF;;AAED8B,IAAAA,UAAU,CAAC7B,QAAD,EAAWsB,cAAX,EAA2BC,gBAA3B,EAA6CnC,KAA7C,EAAoDU,SAApD,CAAV;AACD,GAlDD;AAmDD;;AAED,SAAS+B,UAAT,CAAoB7B,QAApB,EAA8BsB,cAA9B,EAA8CC,gBAA9C,EAAgEnC,KAAhE,EAAuEU,SAAvE,EAAkF;AAChFK,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3C,OAAO,CAAC4D,cAAc,IAAI,IAAnB,EAAyB,iEAAiE,gBAA1F,CAA/C,GAA6J,KAAK,CAAlK;AACA,MAAIhB,MAAM,GAAGlB,KAAK,CAACmB,GAAN,CAAUP,QAAV,CAAb;;AAEA,MAAI,CAACM,MAAL,EAAa;AACX;AACD;;AAED,MAAIiB,gBAAgB,CAAC3F,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BuE,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3C,OAAO,CAAC,KAAD,EAAQ,kDAAkD,8DAA1D,CAA/C,GAA2K,KAAK,CAAhL;AACA;AACD;;AAED,MAAIoE,WAAW,GAAGxB,MAAlB;;AAEA,OAAK,IAAI9E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+F,gBAAgB,CAAC3F,MAAjB,GAA0B,CAA9C,EAAiDJ,CAAC,EAAlD,EAAsD;AACpD,QAAIsG,WAAJ,EAAiB;AACfA,MAAAA,WAAW,GAAGA,WAAW,CAACrB,eAAZ,CAA4Bc,gBAAgB,CAAC/F,CAAD,CAA5C,CAAd;AACD;AACF,GAnB+E,CAmB9E;;;AAGF,MAAI,CAAC8F,cAAD,IAAmB,CAACQ,WAAxB,EAAqC;AACnC3B,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3C,OAAO,CAAC,KAAD,EAAQ,kDAAkD,gEAAlD,GAAqH,2BAA7H,EAA0JsC,QAA1J,EAAoKuB,gBAAgB,CAACzE,QAAjB,EAApK,CAA/C,GAAkP,KAAK,CAAvP;AACA;AACD;;AAED,MAAIiF,UAAU,GAAG9G,0BAA0B,CAACqG,cAAD,CAA3C;AAAA,MACIU,MADJ;;AAGA,MAAI;AACF,QAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,UAAIlB,GAAG,GAAGiB,MAAM,CAAClG,KAAjB;AACA,UAAI+E,UAAU,GAAGrD,iBAAiB,CAACsD,aAAlB,CAAgCgB,WAAhC,EAA6Cf,GAAG,CAACA,GAAjD,EAAsDA,GAAG,CAACC,OAA1D,CAAjB;;AAEA,UAAIH,UAAJ,EAAgB;AACdf,QAAAA,SAAS,CAACpB,OAAV,CAAkB,UAAUkB,QAAV,EAAoB;AACpCpC,UAAAA,iBAAiB,CAACqE,UAAlB,CAA6BhB,UAA7B,EAAyCjB,QAAzC;AACD,SAFD;AAGD;AACF,KATD;;AAWA,SAAKmC,UAAU,CAACrG,CAAX,EAAL,EAAqB,CAAC,CAACsG,MAAM,GAAGD,UAAU,CAACpG,CAAX,EAAV,EAA0BE,IAAhD,GAAuD;AACrDoG,MAAAA,KAAK;AACN;AACF,GAfD,CAeE,OAAO3F,GAAP,EAAY;AACZyF,IAAAA,UAAU,CAAChG,CAAX,CAAaO,GAAb;AACD,GAjBD,SAiBU;AACRyF,IAAAA,UAAU,CAAC9F,CAAX;AACD;AACF;;AAED,SAASyD,YAAT,CAAsBrB,OAAtB,EAA+B;AAC7B,MAAIA,OAAO,CAAC6D,QAAR,CAAiBC,UAAjB,IAA+B9D,OAAO,CAAC6D,QAAR,CAAiBC,UAAjB,CAA4BvG,MAA5B,GAAqC,CAApE,IAAyEyC,OAAO,CAAC6D,QAAR,CAAiBC,UAAjB,CAA4B,CAA5B,EAA+BC,IAA/B,KAAwC,aAArH,EAAoI;AAClI,WAAO/D,OAAO,CAAC6D,QAAR,CAAiBC,UAAjB,CAA4B,CAA5B,EAA+BjF,IAAtC;AACD;;AAED,SAAO,IAAP;AACD;;AAEDmF,MAAM,CAACC,OAAP,GAAiB;AACf3E,EAAAA,aAAa,EAAEA,aADA;AAEfK,EAAAA,eAAe,EAAEA,eAFF;AAGfG,EAAAA,OAAO,EAAEA;AAHM,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n\n    var _iterator = _createForOfIteratorHelper(connectionInfo),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = [];\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = _createForOfIteratorHelper(deletedIDFieldName),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iterator3 = _createForOfIteratorHelper(connectionKeys),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};"]},"metadata":{},"sourceType":"script"}