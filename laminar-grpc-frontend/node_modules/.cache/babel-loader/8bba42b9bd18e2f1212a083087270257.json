{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isRelayEnvironment = require('./isRelayEnvironment');\n/**\n * Asserts that the input is a matches the `RelayContext` type defined in\n * `RelayEnvironmentTypes` and returns it as that type.\n */\n\n\nfunction assertRelayContext(relay) {\n  !isRelayContext(relay) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayContext: Expected `context.relay` to be an object conforming to ' + 'the `RelayContext` interface, got `%s`.', relay) : invariant(false) : void 0;\n  return relay;\n}\n/**\n * Determine if the input is a plain object that matches the `RelayContext`\n * type defined in `RelayEnvironmentTypes`.\n */\n\n\nfunction isRelayContext(context) {\n  return typeof context === 'object' && context !== null && !Array.isArray(context) && isRelayEnvironment(context.environment);\n}\n\nmodule.exports = {\n  assertRelayContext: assertRelayContext,\n  isRelayContext: isRelayContext\n};","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/react-relay/lib/RelayContext.js"],"names":["invariant","require","isRelayEnvironment","assertRelayContext","relay","isRelayContext","process","env","NODE_ENV","context","Array","isArray","environment","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAhC;AAEA;;;;;;AAIA,SAASE,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,GAACC,cAAc,CAACD,KAAD,CAAf,GAAyBE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCR,SAAS,CAAC,KAAD,EAAQ,0EAA0E,yCAAlF,EAA6HI,KAA7H,CAAjD,GAAuLJ,SAAS,CAAC,KAAD,CAAzN,GAAmO,KAAK,CAAxO;AACA,SAAOI,KAAP;AACD;AACD;;;;;;AAMA,SAASC,cAAT,CAAwBI,OAAxB,EAAiC;AAC/B,SAAO,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA3C,IAAmD,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAApD,IAA8EP,kBAAkB,CAACO,OAAO,CAACG,WAAT,CAAvG;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,kBAAkB,EAAEA,kBADL;AAEfE,EAAAA,cAAc,EAAEA;AAFD,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isRelayEnvironment = require('./isRelayEnvironment');\n\n/**\n * Asserts that the input is a matches the `RelayContext` type defined in\n * `RelayEnvironmentTypes` and returns it as that type.\n */\nfunction assertRelayContext(relay) {\n  !isRelayContext(relay) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayContext: Expected `context.relay` to be an object conforming to ' + 'the `RelayContext` interface, got `%s`.', relay) : invariant(false) : void 0;\n  return relay;\n}\n/**\n * Determine if the input is a plain object that matches the `RelayContext`\n * type defined in `RelayEnvironmentTypes`.\n */\n\n\nfunction isRelayContext(context) {\n  return typeof context === 'object' && context !== null && !Array.isArray(context) && isRelayEnvironment(context.environment);\n}\n\nmodule.exports = {\n  assertRelayContext: assertRelayContext,\n  isRelayContext: isRelayContext\n};"]},"metadata":{},"sourceType":"script"}