{"ast":null,"code":"import { Environment, Network, RecordSource, Store } from 'relay-runtime';\n\nfunction fetchQuery(operation, variables) {\n  return fetch('http://localhost:9090/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables\n    })\n  }).then(response => {\n    return response.json();\n  });\n}\n\nconst environment = new Environment({\n  network: Network.create(fetchQuery),\n  store: new Store(new RecordSource())\n});\nexport default environment;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/src/RelayEnv.js"],"names":["Environment","Network","RecordSource","Store","fetchQuery","operation","variables","fetch","method","headers","body","JSON","stringify","query","text","then","response","json","environment","network","create","store"],"mappings":"AAAA,SACIA,WADJ,EAEIC,OAFJ,EAGIC,YAHJ,EAIIC,KAJJ,QAKO,eALP;;AAOA,SAASC,UAAT,CACIC,SADJ,EAEIC,SAFJ,EAGE;AACE,SAAOC,KAAK,CAAC,+BAAD,EAAkC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFiC;AAK1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAER,SAAS,CAACS,IADA;AAEjBR,MAAAA;AAFiB,KAAf;AALoC,GAAlC,CAAL,CASJS,IATI,CASCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXM,CAAP;AAYH;;AAED,MAAMC,WAAW,GAAG,IAAIlB,WAAJ,CAAgB;AAChCmB,EAAAA,OAAO,EAAElB,OAAO,CAACmB,MAAR,CAAehB,UAAf,CADuB;AAEhCiB,EAAAA,KAAK,EAAE,IAAIlB,KAAJ,CAAU,IAAID,YAAJ,EAAV;AAFyB,CAAhB,CAApB;AAKA,eAAegB,WAAf","sourcesContent":["import {\n    Environment,\n    Network,\n    RecordSource,\n    Store,\n} from 'relay-runtime';\n\nfunction fetchQuery(\n    operation,\n    variables,\n) {\n    return fetch('http://localhost:9090/graphql', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            query: operation.text,\n            variables,\n        }),\n    }).then(response => {\n        return response.json();\n    });\n}\n\nconst environment = new Environment({\n    network: Network.create(fetchQuery),\n    store: new Store(new RecordSource()),\n});\n\nexport default environment;"]},"metadata":{},"sourceType":"module"}