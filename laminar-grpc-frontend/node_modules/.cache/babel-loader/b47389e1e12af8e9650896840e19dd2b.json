{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar validateMutation = function validateMutation() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n\n      deepLoc = deepLoc[key];\n    });\n  };\n\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {}\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case 'Condition':\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n\n      case 'ScalarField':\n      case 'LinkedField':\n        return validateField(optimisticResponse, selection, context);\n\n      case 'InlineFragment':\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case 'ClientExtension':\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case 'ModuleImport':\n      case 'LinkedHandle':\n      case 'ScalarHandle':\n      case 'Defer':\n      case 'Stream':\n      case 'TypeDiscriminator':\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n\n      default:\n        selection;\n        return;\n    }\n  };\n\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n\n    switch (field.kind) {\n      case 'ScalarField':\n        if (optimisticResponse.hasOwnProperty(fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n\n        return;\n\n      case 'LinkedField':\n        var selections = field.selections;\n\n        if (optimisticResponse[fieldName] === null || Object.hasOwnProperty(fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, _objectSpread({}, context, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, _objectSpread({}, context, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n\n    }\n  };\n\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, _objectSpread({}, context, {\n          path: path\n        }));\n      }\n    });\n  };\n}\n\nmodule.exports = validateMutation;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/mutations/validateMutation.js"],"names":["_interopRequireDefault","require","_defineProperty2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","warning","validateMutation","process","env","NODE_ENV","addFieldToDiff","path","diff","isScalar","deepLoc","split","index","arr","optimisticResponse","mutation","variables","operationName","operation","name","context","visitedPaths","Set","missingDiff","extraDiff","validateSelections","selections","validateOptimisticResponse","ROOT","JSON","stringify","selection","validateSelection","kind","validateField","type","isConcreteType","abstractKey","subselection","__typename","field","fieldName","alias","concat","add","hasOwnProperty","undefined","plural","Array","isArray","r","value","has","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar validateMutation = function validateMutation() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n\n      deepLoc = deepLoc[key];\n    });\n  };\n\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {}\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case 'Condition':\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n\n      case 'ScalarField':\n      case 'LinkedField':\n        return validateField(optimisticResponse, selection, context);\n\n      case 'InlineFragment':\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case 'ClientExtension':\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case 'ModuleImport':\n      case 'LinkedHandle':\n      case 'ScalarHandle':\n      case 'Defer':\n      case 'Stream':\n      case 'TypeDiscriminator':\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n\n      default:\n        selection;\n        return;\n    }\n  };\n\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n\n    switch (field.kind) {\n      case 'ScalarField':\n        if (optimisticResponse.hasOwnProperty(fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n\n        return;\n\n      case 'LinkedField':\n        var selections = field.selections;\n\n        if (optimisticResponse[fieldName] === null || Object.hasOwnProperty(fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, _objectSpread({}, context, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, _objectSpread({}, context, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n\n    }\n  };\n\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, _objectSpread({}, context, {\n          path: path\n        }));\n      }\n    });\n  };\n}\n\nmodule.exports = validateMutation;"]},"metadata":{},"sourceType":"script"}