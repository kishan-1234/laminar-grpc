{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport defaultOptions from '../../defaultOptions';\nimport { EditingMode } from '../../enums';\nimport { getCellEditorDispatchHandler } from '../../Utils/CellUtils';\nimport { getElementCustomization } from '../../Utils/ComponentUtils';\nimport CellEditorState from '../CellEditorState/CellEditorState';\n\nvar CellEditor = function (props) {\n  var childComponents = props.childComponents,\n      dispatch = props.dispatch,\n      editingMode = props.editingMode;\n\n  var _a = getElementCustomization({\n    className: \"\" + defaultOptions.css.cellEditor\n  }, props, childComponents.cellEditor),\n      elementAttributes = _a.elementAttributes,\n      content = _a.content;\n\n  return React.createElement(\"div\", __assign({}, elementAttributes), content || (editingMode === EditingMode.Cell ? React.createElement(CellEditorState, __assign({}, props, {\n    dispatch: getCellEditorDispatchHandler(dispatch),\n    autoFocus: true\n  })) : React.createElement(CellEditorState, __assign({}, props))));\n};\n\nexport default CellEditor;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Components/CellEditor/CellEditor.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","defaultOptions","EditingMode","getCellEditorDispatchHandler","getElementCustomization","CellEditorState","CellEditor","props","childComponents","dispatch","editingMode","_a","className","css","cellEditor","elementAttributes","content","createElement","Cell","autoFocus"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,4BAAT,QAA6C,uBAA7C;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AACA,IAAIC,UAAU,GAAG,UAAUC,KAAV,EAAiB;AAC9B,MAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;AAAA,MAA6CC,QAAQ,GAAGF,KAAK,CAACE,QAA9D;AAAA,MAAwEC,WAAW,GAAGH,KAAK,CAACG,WAA5F;;AACA,MAAIC,EAAE,GAAGP,uBAAuB,CAAC;AAC7BQ,IAAAA,SAAS,EAAE,KAAKX,cAAc,CAACY,GAAf,CAAmBC;AADN,GAAD,EAE7BP,KAF6B,EAEtBC,eAAe,CAACM,UAFM,CAAhC;AAAA,MAEuCC,iBAAiB,GAAGJ,EAAE,CAACI,iBAF9D;AAAA,MAEiFC,OAAO,GAAGL,EAAE,CAACK,OAF9F;;AAGA,SAAQhB,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B/B,QAAQ,CAAC,EAAD,EAAK6B,iBAAL,CAAnC,EAA4DC,OAAO,KAAKN,WAAW,KAAKR,WAAW,CAACgB,IAA5B,GAC1ElB,KAAK,CAACiB,aAAN,CAAoBZ,eAApB,EAAqCnB,QAAQ,CAAC,EAAD,EAAKqB,KAAL,EAAY;AAAEE,IAAAA,QAAQ,EAAEN,4BAA4B,CAACM,QAAD,CAAxC;AAAoDU,IAAAA,SAAS,EAAE;AAA/D,GAAZ,CAA7C,CAD0E,GAE1EnB,KAAK,CAACiB,aAAN,CAAoBZ,eAApB,EAAqCnB,QAAQ,CAAC,EAAD,EAAKqB,KAAL,CAA7C,CAFqE,CAAnE,CAAR;AAGH,CARD;;AASA,eAAeD,UAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport defaultOptions from '../../defaultOptions';\nimport { EditingMode } from '../../enums';\nimport { getCellEditorDispatchHandler } from '../../Utils/CellUtils';\nimport { getElementCustomization } from '../../Utils/ComponentUtils';\nimport CellEditorState from '../CellEditorState/CellEditorState';\nvar CellEditor = function (props) {\n    var childComponents = props.childComponents, dispatch = props.dispatch, editingMode = props.editingMode;\n    var _a = getElementCustomization({\n        className: \"\" + defaultOptions.css.cellEditor\n    }, props, childComponents.cellEditor), elementAttributes = _a.elementAttributes, content = _a.content;\n    return (React.createElement(\"div\", __assign({}, elementAttributes), content || (editingMode === EditingMode.Cell\n        ? React.createElement(CellEditorState, __assign({}, props, { dispatch: getCellEditorDispatchHandler(dispatch), autoFocus: true }))\n        : React.createElement(CellEditorState, __assign({}, props)))));\n};\nexport default CellEditor;"]},"metadata":{},"sourceType":"module"}