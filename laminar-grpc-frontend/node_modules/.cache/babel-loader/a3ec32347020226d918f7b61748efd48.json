{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('../store/ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getStableStorageKey = _require2.getStableStorageKey;\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\n\n\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n\n  var _proto = RelayRecordProxy.prototype;\n\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n\n    this._mutator.setValue(this._dataID, storageKey, value);\n\n    return this;\n  };\n\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n\n    return this;\n  };\n\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n\n    if (!linkedRecord) {\n      var _this$_source$get;\n\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey); // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n\n    return linkedRecord;\n  };\n\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n\n    return this;\n  };\n\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n\n  return RelayRecordProxy;\n}();\n\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\n\nmodule.exports = RelayRecordProxy;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/mutations/RelayRecordProxy.js"],"names":["invariant","require","_require","generateClientID","_require2","getStableStorageKey","RelayRecordProxy","source","mutator","dataID","_dataID","_mutator","_source","_proto","prototype","copyFieldsFrom","copyFields","getDataID","getType","type","process","env","NODE_ENV","getValue","name","args","storageKey","setValue","value","isValidLeafValue","JSON","stringify","getLinkedRecord","linkedID","getLinkedRecordID","get","setLinkedRecord","record","setLinkedRecordID","getOrCreateLinkedRecord","typeName","linkedRecord","_this$_source$get","clientID","create","getLinkedRecords","_this","linkedIDs","getLinkedRecordIDs","map","setLinkedRecords","records","Array","isArray","setLinkedRecordIDs","invalidateRecord","markIDForInvalidation","every","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('../store/ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getStableStorageKey = _require2.getStableStorageKey;\n\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n\n  var _proto = RelayRecordProxy.prototype;\n\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n\n    this._mutator.setValue(this._dataID, storageKey, value);\n\n    return this;\n  };\n\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n\n    return this;\n  };\n\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n\n    if (!linkedRecord) {\n      var _this$_source$get;\n\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey); // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n\n    return linkedRecord;\n  };\n\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n\n    return this;\n  };\n\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n\n  return RelayRecordProxy;\n}();\n\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\n\nmodule.exports = RelayRecordProxy;"]},"metadata":{},"sourceType":"script"}