{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('../query/GraphQLTag'),\n    getInlineDataFragment = _require.getInlineDataFragment;\n\nvar _require2 = require('./RelayStoreUtils'),\n    FRAGMENTS_KEY = _require2.FRAGMENTS_KEY;\n\nfunction readInlineData(fragment, fragmentRef) {\n  var _fragmentRef$FRAGMENT;\n\n  var inlineDataFragment = getInlineDataFragment(fragment);\n\n  if (fragmentRef == null) {\n    return fragmentRef;\n  }\n\n  !(typeof fragmentRef === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected an object, got `%s`.', typeof fragmentRef) : invariant(false) : void 0; // $FlowFixMe[incompatible-use]\n\n  var inlineData = (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) === null || _fragmentRef$FRAGMENT === void 0 ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];\n  !(inlineData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected fragment `%s` to be spread in the parent ' + 'fragment.', inlineDataFragment.name) : invariant(false) : void 0;\n  return inlineData;\n}\n\nmodule.exports = readInlineData;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/store/readInlineData.js"],"names":["invariant","require","_require","getInlineDataFragment","_require2","FRAGMENTS_KEY","readInlineData","fragment","fragmentRef","_fragmentRef$FRAGMENT","inlineDataFragment","process","env","NODE_ENV","inlineData","name","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAtB;AAAA,IACIE,qBAAqB,GAAGD,QAAQ,CAACC,qBADrC;;AAGA,IAAIC,SAAS,GAAGH,OAAO,CAAC,mBAAD,CAAvB;AAAA,IACII,aAAa,GAAGD,SAAS,CAACC,aAD9B;;AAGA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,WAAlC,EAA+C;AAC7C,MAAIC,qBAAJ;;AAEA,MAAIC,kBAAkB,GAAGP,qBAAqB,CAACI,QAAD,CAA9C;;AAEA,MAAIC,WAAW,IAAI,IAAnB,EAAyB;AACvB,WAAOA,WAAP;AACD;;AAED,IAAE,OAAOA,WAAP,KAAuB,QAAzB,IAAqCG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,iDAAR,EAA2D,OAAOQ,WAAlE,CAAjD,GAAkIR,SAAS,CAAC,KAAD,CAAhL,GAA0L,KAAK,CAA/L,CAT6C,CASqJ;;AAElM,MAAIc,UAAU,GAAG,CAACL,qBAAqB,GAAGD,WAAW,CAACH,aAAD,CAApC,MAAyD,IAAzD,IAAiEI,qBAAqB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6GA,qBAAqB,CAACC,kBAAkB,CAACK,IAApB,CAAnJ;AACA,IAAED,UAAU,IAAI,IAAhB,IAAwBH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,yEAAyE,WAAjF,EAA8FU,kBAAkB,CAACK,IAAjH,CAAjD,GAA0Kf,SAAS,CAAC,KAAD,CAA3M,GAAqN,KAAK,CAA1N;AACA,SAAOc,UAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('../query/GraphQLTag'),\n    getInlineDataFragment = _require.getInlineDataFragment;\n\nvar _require2 = require('./RelayStoreUtils'),\n    FRAGMENTS_KEY = _require2.FRAGMENTS_KEY;\n\nfunction readInlineData(fragment, fragmentRef) {\n  var _fragmentRef$FRAGMENT;\n\n  var inlineDataFragment = getInlineDataFragment(fragment);\n\n  if (fragmentRef == null) {\n    return fragmentRef;\n  }\n\n  !(typeof fragmentRef === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected an object, got `%s`.', typeof fragmentRef) : invariant(false) : void 0; // $FlowFixMe[incompatible-use]\n\n  var inlineData = (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) === null || _fragmentRef$FRAGMENT === void 0 ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];\n  !(inlineData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected fragment `%s` to be spread in the parent ' + 'fragment.', inlineDataFragment.name) : invariant(false) : void 0;\n  return inlineData;\n}\n\nmodule.exports = readInlineData;"]},"metadata":{},"sourceType":"script"}