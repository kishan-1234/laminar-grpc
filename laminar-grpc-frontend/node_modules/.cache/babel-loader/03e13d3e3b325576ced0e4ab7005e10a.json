{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\n\nvar validateMutation = require('./validateMutation');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar _require2 = require('../store/ClientID'),\n    generateUniqueClientID = _require2.generateUniqueClientID;\n\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require3.createOperationDescriptor;\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\n\n\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n\n  var optimisticResponse = config.optimisticResponse,\n      optimisticUpdater = config.optimisticUpdater,\n      updater = config.updater;\n  var configs = config.configs,\n      cacheConfig = config.cacheConfig,\n      onError = config.onError,\n      onUnsubscribe = config.onUnsubscribe,\n      variables = config.variables,\n      uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, generateUniqueClientID()); // TODO: remove this check after we fix flow.\n\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n\n  var errors = [];\n  var subscription = environment.executeMutation({\n    cacheConfig: cacheConfig,\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\n\nmodule.exports = commitMutation;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/mutations/commitMutation.js"],"names":["_interopRequireDefault","require","_toConsumableArray2","RelayDeclarativeMutationConfig","RelayFeatureFlags","invariant","isRelayModernEnvironment","validateMutation","warning","_require","getRequest","_require2","generateUniqueClientID","_require3","createOperationDescriptor","commitMutation","environment","config","process","env","NODE_ENV","mutation","params","operationKind","Error","kind","optimisticResponse","optimisticUpdater","updater","configs","cacheConfig","onError","onUnsubscribe","variables","uploadables","operation","Object","_RelayDeclarativeMuta","convert","errors","subscription","executeMutation","subscribe","next","payload","Array","isArray","forEach","item","push","apply","complete","onCompleted","snapshot","lookup","fragment","data","length","error","unsubscribe","dispose","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\n\nvar validateMutation = require('./validateMutation');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar _require2 = require('../store/ClientID'),\n    generateUniqueClientID = _require2.generateUniqueClientID;\n\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require3.createOperationDescriptor;\n\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n\n  var optimisticResponse = config.optimisticResponse,\n      optimisticUpdater = config.optimisticUpdater,\n      updater = config.updater;\n  var configs = config.configs,\n      cacheConfig = config.cacheConfig,\n      onError = config.onError,\n      onUnsubscribe = config.onUnsubscribe,\n      variables = config.variables,\n      uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, generateUniqueClientID()); // TODO: remove this check after we fix flow.\n\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n\n  var errors = [];\n  var subscription = environment.executeMutation({\n    cacheConfig: cacheConfig,\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\n\nmodule.exports = commitMutation;"]},"metadata":{},"sourceType":"script"}