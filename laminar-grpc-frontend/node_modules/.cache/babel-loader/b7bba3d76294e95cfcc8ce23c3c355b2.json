{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar RelayOperationTracker = /*#__PURE__*/function () {\n  function RelayOperationTracker() {\n    this._ownersToPendingOperations = new Map();\n    this._pendingOperationsToOwners = new Map();\n    this._ownersToPromise = new Map();\n  }\n  /**\n   * Update the map of current processing operations with the set of\n   * affected owners and notify subscribers\n   */\n\n\n  var _proto = RelayOperationTracker.prototype;\n\n  _proto.update = function update(pendingOperation, affectedOwners) {\n    if (affectedOwners.size === 0) {\n      return;\n    }\n\n    var newlyAffectedOwners = new Set();\n\n    var _iterator = _createForOfIteratorHelper(affectedOwners),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var owner = _step.value;\n\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(owner);\n\n        if (pendingOperationsAffectingOwner != null) {\n          // In this case the `owner` already affected by some operations\n          // We just need to detect, is it the same operation that we already\n          // have in the list, or it's a new operation\n          if (!pendingOperationsAffectingOwner.has(pendingOperation)) {\n            pendingOperationsAffectingOwner.add(pendingOperation);\n            newlyAffectedOwners.add(owner);\n          }\n        } else {\n          // This is a new `owner` that is affected by the operation\n          this._ownersToPendingOperations.set(owner, new Set([pendingOperation]));\n\n          newlyAffectedOwners.add(owner);\n        }\n      } // No new owners were affected by this operation, we may stop here\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (newlyAffectedOwners.size === 0) {\n      return;\n    } // But, if some owners were affected we need to add them to\n    // the `_pendingOperationsToOwners` set\n\n\n    var ownersAffectedByOperation = this._pendingOperationsToOwners.get(pendingOperation) || new Set();\n\n    var _iterator2 = _createForOfIteratorHelper(newlyAffectedOwners),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _owner = _step2.value;\n\n        this._resolveOwnerResolvers(_owner);\n\n        ownersAffectedByOperation.add(_owner);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    this._pendingOperationsToOwners.set(pendingOperation, ownersAffectedByOperation);\n  }\n  /**\n   * Once pending operation is completed we need to remove it\n   * from all tracking maps\n   */\n  ;\n\n  _proto.complete = function complete(pendingOperation) {\n    var affectedOwners = this._pendingOperationsToOwners.get(pendingOperation);\n\n    if (affectedOwners == null) {\n      return;\n    } // These were the owners affected only by `pendingOperation`\n\n\n    var completedOwners = new Set(); // These were the owners affected by `pendingOperation`\n    // and some other operations\n\n    var updatedOwners = new Set();\n\n    var _iterator3 = _createForOfIteratorHelper(affectedOwners),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var owner = _step3.value;\n\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(owner);\n\n        if (!pendingOperationsAffectingOwner) {\n          continue;\n        }\n\n        pendingOperationsAffectingOwner[\"delete\"](pendingOperation);\n\n        if (pendingOperationsAffectingOwner.size > 0) {\n          updatedOwners.add(owner);\n        } else {\n          completedOwners.add(owner);\n        }\n      } // Complete subscriptions for all owners, affected by `pendingOperation`\n\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(completedOwners),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _owner2 = _step4.value;\n\n        this._resolveOwnerResolvers(_owner2);\n\n        this._ownersToPendingOperations[\"delete\"](_owner2);\n      } // Update all owner that were updated by `pendingOperation` but still\n      // are affected by other operations\n\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var _iterator5 = _createForOfIteratorHelper(updatedOwners),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _owner3 = _step5.value;\n\n        this._resolveOwnerResolvers(_owner3);\n      } // Finally, remove pending operation\n\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    this._pendingOperationsToOwners[\"delete\"](pendingOperation);\n  };\n\n  _proto._resolveOwnerResolvers = function _resolveOwnerResolvers(owner) {\n    var promiseEntry = this._ownersToPromise.get(owner);\n\n    if (promiseEntry != null) {\n      promiseEntry.resolve();\n    }\n\n    this._ownersToPromise[\"delete\"](owner);\n  };\n\n  _proto.getPromiseForPendingOperationsAffectingOwner = function getPromiseForPendingOperationsAffectingOwner(owner) {\n    if (!this._ownersToPendingOperations.has(owner)) {\n      return null;\n    }\n\n    var cachedPromiseEntry = this._ownersToPromise.get(owner);\n\n    if (cachedPromiseEntry != null) {\n      return cachedPromiseEntry.promise;\n    }\n\n    var resolve;\n    var promise = new Promise(function (r) {\n      resolve = r;\n    });\n    !(resolve != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayOperationTracker: Expected resolver to be defined. If you' + 'are seeing this, it is likely a bug in Relay.') : invariant(false) : void 0;\n\n    this._ownersToPromise.set(owner, {\n      promise: promise,\n      resolve: resolve\n    });\n\n    return promise;\n  };\n\n  return RelayOperationTracker;\n}();\n\nmodule.exports = RelayOperationTracker;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/store/RelayOperationTracker.js"],"names":["_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","invariant","require","RelayOperationTracker","_ownersToPendingOperations","Map","_pendingOperationsToOwners","_ownersToPromise","_proto","update","pendingOperation","affectedOwners","size","newlyAffectedOwners","Set","_iterator","_step","owner","pendingOperationsAffectingOwner","get","has","add","set","ownersAffectedByOperation","_iterator2","_step2","_owner","_resolveOwnerResolvers","complete","completedOwners","updatedOwners","_iterator3","_step3","_iterator4","_step4","_owner2","_iterator5","_step5","_owner3","promiseEntry","resolve","getPromiseForPendingOperationsAffectingOwner","cachedPromiseEntry","promise","Promise","r","process","env","NODE_ENV","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar RelayOperationTracker = /*#__PURE__*/function () {\n  function RelayOperationTracker() {\n    this._ownersToPendingOperations = new Map();\n    this._pendingOperationsToOwners = new Map();\n    this._ownersToPromise = new Map();\n  }\n  /**\n   * Update the map of current processing operations with the set of\n   * affected owners and notify subscribers\n   */\n\n\n  var _proto = RelayOperationTracker.prototype;\n\n  _proto.update = function update(pendingOperation, affectedOwners) {\n    if (affectedOwners.size === 0) {\n      return;\n    }\n\n    var newlyAffectedOwners = new Set();\n\n    var _iterator = _createForOfIteratorHelper(affectedOwners),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var owner = _step.value;\n\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(owner);\n\n        if (pendingOperationsAffectingOwner != null) {\n          // In this case the `owner` already affected by some operations\n          // We just need to detect, is it the same operation that we already\n          // have in the list, or it's a new operation\n          if (!pendingOperationsAffectingOwner.has(pendingOperation)) {\n            pendingOperationsAffectingOwner.add(pendingOperation);\n            newlyAffectedOwners.add(owner);\n          }\n        } else {\n          // This is a new `owner` that is affected by the operation\n          this._ownersToPendingOperations.set(owner, new Set([pendingOperation]));\n\n          newlyAffectedOwners.add(owner);\n        }\n      } // No new owners were affected by this operation, we may stop here\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (newlyAffectedOwners.size === 0) {\n      return;\n    } // But, if some owners were affected we need to add them to\n    // the `_pendingOperationsToOwners` set\n\n\n    var ownersAffectedByOperation = this._pendingOperationsToOwners.get(pendingOperation) || new Set();\n\n    var _iterator2 = _createForOfIteratorHelper(newlyAffectedOwners),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _owner = _step2.value;\n\n        this._resolveOwnerResolvers(_owner);\n\n        ownersAffectedByOperation.add(_owner);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    this._pendingOperationsToOwners.set(pendingOperation, ownersAffectedByOperation);\n  }\n  /**\n   * Once pending operation is completed we need to remove it\n   * from all tracking maps\n   */\n  ;\n\n  _proto.complete = function complete(pendingOperation) {\n    var affectedOwners = this._pendingOperationsToOwners.get(pendingOperation);\n\n    if (affectedOwners == null) {\n      return;\n    } // These were the owners affected only by `pendingOperation`\n\n\n    var completedOwners = new Set(); // These were the owners affected by `pendingOperation`\n    // and some other operations\n\n    var updatedOwners = new Set();\n\n    var _iterator3 = _createForOfIteratorHelper(affectedOwners),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var owner = _step3.value;\n\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(owner);\n\n        if (!pendingOperationsAffectingOwner) {\n          continue;\n        }\n\n        pendingOperationsAffectingOwner[\"delete\"](pendingOperation);\n\n        if (pendingOperationsAffectingOwner.size > 0) {\n          updatedOwners.add(owner);\n        } else {\n          completedOwners.add(owner);\n        }\n      } // Complete subscriptions for all owners, affected by `pendingOperation`\n\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(completedOwners),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _owner2 = _step4.value;\n\n        this._resolveOwnerResolvers(_owner2);\n\n        this._ownersToPendingOperations[\"delete\"](_owner2);\n      } // Update all owner that were updated by `pendingOperation` but still\n      // are affected by other operations\n\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var _iterator5 = _createForOfIteratorHelper(updatedOwners),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _owner3 = _step5.value;\n\n        this._resolveOwnerResolvers(_owner3);\n      } // Finally, remove pending operation\n\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    this._pendingOperationsToOwners[\"delete\"](pendingOperation);\n  };\n\n  _proto._resolveOwnerResolvers = function _resolveOwnerResolvers(owner) {\n    var promiseEntry = this._ownersToPromise.get(owner);\n\n    if (promiseEntry != null) {\n      promiseEntry.resolve();\n    }\n\n    this._ownersToPromise[\"delete\"](owner);\n  };\n\n  _proto.getPromiseForPendingOperationsAffectingOwner = function getPromiseForPendingOperationsAffectingOwner(owner) {\n    if (!this._ownersToPendingOperations.has(owner)) {\n      return null;\n    }\n\n    var cachedPromiseEntry = this._ownersToPromise.get(owner);\n\n    if (cachedPromiseEntry != null) {\n      return cachedPromiseEntry.promise;\n    }\n\n    var resolve;\n    var promise = new Promise(function (r) {\n      resolve = r;\n    });\n    !(resolve != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayOperationTracker: Expected resolver to be defined. If you' + 'are seeing this, it is likely a bug in Relay.') : invariant(false) : void 0;\n\n    this._ownersToPromise.set(owner, {\n      promise: promise,\n      resolve: resolve\n    });\n\n    return promise;\n  };\n\n  return RelayOperationTracker;\n}();\n\nmodule.exports = RelayOperationTracker;"]},"metadata":{},"sourceType":"script"}