{"ast":null,"code":"import React from 'react';\nimport { newRowId } from '../../const';\nimport { EditingMode } from '../../enums';\nimport DataRow from '../DataRow/DataRow';\n\nvar NewRow = function (_a) {\n  var childComponents = _a.childComponents,\n      columns = _a.columns,\n      dispatch = _a.dispatch,\n      editableCells = _a.editableCells,\n      format = _a.format,\n      groupColumnsCount = _a.groupColumnsCount,\n      rowKeyField = _a.rowKeyField,\n      validation = _a.validation;\n  return React.createElement(DataRow, {\n    childComponents: childComponents,\n    columns: columns,\n    dispatch: dispatch,\n    format: format,\n    editableCells: editableCells,\n    editingMode: EditingMode.None,\n    groupColumnsCount: groupColumnsCount,\n    isDetailsRowShown: false,\n    isSelectedRow: false,\n    rowData: {},\n    rowKeyField: rowKeyField,\n    rowKeyValue: newRowId,\n    rowReordering: false,\n    validation: validation,\n    selectedRows: [],\n    rowEditableCells: editableCells\n  });\n};\n\nexport default NewRow;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Components/NewRow/NewRow.js"],"names":["React","newRowId","EditingMode","DataRow","NewRow","_a","childComponents","columns","dispatch","editableCells","format","groupColumnsCount","rowKeyField","validation","createElement","editingMode","None","isDetailsRowShown","isSelectedRow","rowData","rowKeyValue","rowReordering","selectedRows","rowEditableCells"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,IAAIC,MAAM,GAAG,UAAUC,EAAV,EAAc;AACvB,MAAIC,eAAe,GAAGD,EAAE,CAACC,eAAzB;AAAA,MAA0CC,OAAO,GAAGF,EAAE,CAACE,OAAvD;AAAA,MAAgEC,QAAQ,GAAGH,EAAE,CAACG,QAA9E;AAAA,MAAwFC,aAAa,GAAGJ,EAAE,CAACI,aAA3G;AAAA,MAA0HC,MAAM,GAAGL,EAAE,CAACK,MAAtI;AAAA,MAA8IC,iBAAiB,GAAGN,EAAE,CAACM,iBAArK;AAAA,MAAwLC,WAAW,GAAGP,EAAE,CAACO,WAAzM;AAAA,MAAsNC,UAAU,GAAGR,EAAE,CAACQ,UAAtO;AACA,SAAQb,KAAK,CAACc,aAAN,CAAoBX,OAApB,EAA6B;AAAEG,IAAAA,eAAe,EAAEA,eAAnB;AAAoCC,IAAAA,OAAO,EAAEA,OAA7C;AAAsDC,IAAAA,QAAQ,EAAEA,QAAhE;AAA0EE,IAAAA,MAAM,EAAEA,MAAlF;AAA0FD,IAAAA,aAAa,EAAEA,aAAzG;AAAwHM,IAAAA,WAAW,EAAEb,WAAW,CAACc,IAAjJ;AAAuJL,IAAAA,iBAAiB,EAAEA,iBAA1K;AAA6LM,IAAAA,iBAAiB,EAAE,KAAhN;AAAuNC,IAAAA,aAAa,EAAE,KAAtO;AAA6OC,IAAAA,OAAO,EAAE,EAAtP;AAA0PP,IAAAA,WAAW,EAAEA,WAAvQ;AAAoRQ,IAAAA,WAAW,EAAEnB,QAAjS;AAA2SoB,IAAAA,aAAa,EAAE,KAA1T;AAAiUR,IAAAA,UAAU,EAAEA,UAA7U;AAAyVS,IAAAA,YAAY,EAAE,EAAvW;AAA2WC,IAAAA,gBAAgB,EAAEd;AAA7X,GAA7B,CAAR;AACH,CAHD;;AAIA,eAAeL,MAAf","sourcesContent":["import React from 'react';\nimport { newRowId } from '../../const';\nimport { EditingMode } from '../../enums';\nimport DataRow from '../DataRow/DataRow';\nvar NewRow = function (_a) {\n    var childComponents = _a.childComponents, columns = _a.columns, dispatch = _a.dispatch, editableCells = _a.editableCells, format = _a.format, groupColumnsCount = _a.groupColumnsCount, rowKeyField = _a.rowKeyField, validation = _a.validation;\n    return (React.createElement(DataRow, { childComponents: childComponents, columns: columns, dispatch: dispatch, format: format, editableCells: editableCells, editingMode: EditingMode.None, groupColumnsCount: groupColumnsCount, isDetailsRowShown: false, isSelectedRow: false, rowData: {}, rowKeyField: rowKeyField, rowKeyValue: newRowId, rowReordering: false, validation: validation, selectedRows: [], rowEditableCells: editableCells }));\n};\nexport default NewRow;"]},"metadata":{},"sourceType":"module"}