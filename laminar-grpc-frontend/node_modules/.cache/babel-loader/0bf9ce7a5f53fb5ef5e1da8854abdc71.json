{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar stableCopy = require('../util/stableCopy');\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\n\n\nvar RelayQueryResponseCache = /*#__PURE__*/function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n        ttl = _ref.ttl;\n    !(size > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size) : invariant(false) : void 0;\n    !(ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl) : invariant(false) : void 0;\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n\n  var _proto = RelayQueryResponseCache.prototype;\n\n  _proto.clear = function clear() {\n    this._responses.clear();\n  };\n\n  _proto.get = function get(queryID, variables) {\n    var _this = this;\n\n    var cacheKey = getCacheKey(queryID, variables);\n\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses[\"delete\"](key);\n      }\n    });\n\n    var response = this._responses.get(cacheKey);\n\n    return response != null ? _objectSpread({}, response.payload, {\n      extensions: _objectSpread({}, response.payload.extensions, {\n        cacheTimestamp: response.fetchTime\n      })\n    }) : null;\n  };\n\n  _proto.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n\n    this._responses[\"delete\"](cacheKey); // deletion resets key ordering\n\n\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    }); // Purge least-recently updated key when max size reached\n\n\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n\n      if (!firstKey.done) {\n        this._responses[\"delete\"](firstKey.value);\n      }\n    }\n  };\n\n  return RelayQueryResponseCache;\n}();\n\nfunction getCacheKey(queryID, variables) {\n  return JSON.stringify(stableCopy({\n    queryID: queryID,\n    variables: variables\n  }));\n}\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\n\n\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\n\nmodule.exports = RelayQueryResponseCache;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/network/RelayQueryResponseCache.js"],"names":["_interopRequireDefault","require","_defineProperty2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","invariant","stableCopy","RelayQueryResponseCache","_ref","size","ttl","process","env","NODE_ENV","_responses","Map","_size","_ttl","_proto","prototype","clear","get","queryID","variables","_this","cacheKey","getCacheKey","response","isCurrent","fetchTime","payload","extensions","cacheTimestamp","set","Date","now","firstKey","next","done","value","JSON","stringify","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar stableCopy = require('../util/stableCopy');\n\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nvar RelayQueryResponseCache = /*#__PURE__*/function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n        ttl = _ref.ttl;\n    !(size > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size) : invariant(false) : void 0;\n    !(ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl) : invariant(false) : void 0;\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n\n  var _proto = RelayQueryResponseCache.prototype;\n\n  _proto.clear = function clear() {\n    this._responses.clear();\n  };\n\n  _proto.get = function get(queryID, variables) {\n    var _this = this;\n\n    var cacheKey = getCacheKey(queryID, variables);\n\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses[\"delete\"](key);\n      }\n    });\n\n    var response = this._responses.get(cacheKey);\n\n    return response != null ? _objectSpread({}, response.payload, {\n      extensions: _objectSpread({}, response.payload.extensions, {\n        cacheTimestamp: response.fetchTime\n      })\n    }) : null;\n  };\n\n  _proto.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n\n    this._responses[\"delete\"](cacheKey); // deletion resets key ordering\n\n\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    }); // Purge least-recently updated key when max size reached\n\n\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n\n      if (!firstKey.done) {\n        this._responses[\"delete\"](firstKey.value);\n      }\n    }\n  };\n\n  return RelayQueryResponseCache;\n}();\n\nfunction getCacheKey(queryID, variables) {\n  return JSON.stringify(stableCopy({\n    queryID: queryID,\n    variables: variables\n  }));\n}\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\n\n\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\n\nmodule.exports = RelayQueryResponseCache;"]},"metadata":{},"sourceType":"script"}