{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { openEditor } from '../../actionCreators';\nimport defaultOptions from '../../defaultOptions';\nimport { EditingMode } from '../../enums';\nimport { isEmpty } from '../../Utils/CommonUtils';\nimport { getElementCustomization } from '../../Utils/ComponentUtils';\n\nvar CellText = function (props) {\n  var childComponents = props.childComponents,\n      column = props.column,\n      format = props.format,\n      dispatch = props.dispatch,\n      editingMode = props.editingMode,\n      rowKeyValue = props.rowKeyValue,\n      value = props.value;\n  var formatedValue = format && format({\n    column: column,\n    value: value\n  });\n  formatedValue = formatedValue || !isEmpty(value) && value.toString();\n\n  var _a = getElementCustomization({\n    className: defaultOptions.css.cellText,\n    onClick: function () {\n      if (editingMode === EditingMode.Cell) {\n        dispatch(openEditor(rowKeyValue, column.key));\n      }\n    }\n  }, props, childComponents.cellText),\n      elementAttributes = _a.elementAttributes,\n      content = _a.content;\n\n  return React.createElement(\"div\", __assign({}, elementAttributes), content || formatedValue || React.createElement(React.Fragment, null, \"\\u00A0\"));\n};\n\nexport default CellText;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Components/CellText/CellText.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","openEditor","defaultOptions","EditingMode","isEmpty","getElementCustomization","CellText","props","childComponents","column","format","dispatch","editingMode","rowKeyValue","value","formatedValue","toString","_a","className","css","cellText","onClick","Cell","key","elementAttributes","content","createElement","Fragment"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKO,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,uBAAT,QAAwC,4BAAxC;;AACA,IAAIC,QAAQ,GAAG,UAAUC,KAAV,EAAiB;AAC5B,MAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;AAAA,MAA6CC,MAAM,GAAGF,KAAK,CAACE,MAA5D;AAAA,MAAoEC,MAAM,GAAGH,KAAK,CAACG,MAAnF;AAAA,MAA2FC,QAAQ,GAAGJ,KAAK,CAACI,QAA5G;AAAA,MAAsHC,WAAW,GAAGL,KAAK,CAACK,WAA1I;AAAA,MAAuJC,WAAW,GAAGN,KAAK,CAACM,WAA3K;AAAA,MAAwLC,KAAK,GAAGP,KAAK,CAACO,KAAtM;AACA,MAAIC,aAAa,GAAGL,MAAM,IAAIA,MAAM,CAAC;AAAED,IAAAA,MAAM,EAAEA,MAAV;AAAkBK,IAAAA,KAAK,EAAEA;AAAzB,GAAD,CAApC;AACAC,EAAAA,aAAa,GAAGA,aAAa,IAAK,CAACX,OAAO,CAACU,KAAD,CAAR,IAAmBA,KAAK,CAACE,QAAN,EAArD;;AACA,MAAIC,EAAE,GAAGZ,uBAAuB,CAAC;AAC7Ba,IAAAA,SAAS,EAAEhB,cAAc,CAACiB,GAAf,CAAmBC,QADD;AAE7BC,IAAAA,OAAO,EAAE,YAAY;AACjB,UAAIT,WAAW,KAAKT,WAAW,CAACmB,IAAhC,EAAsC;AAClCX,QAAAA,QAAQ,CAACV,UAAU,CAACY,WAAD,EAAcJ,MAAM,CAACc,GAArB,CAAX,CAAR;AACH;AACJ;AAN4B,GAAD,EAO7BhB,KAP6B,EAOtBC,eAAe,CAACY,QAPM,CAAhC;AAAA,MAOqCI,iBAAiB,GAAGP,EAAE,CAACO,iBAP5D;AAAA,MAO+EC,OAAO,GAAGR,EAAE,CAACQ,OAP5F;;AAQA,SAAQzB,KAAK,CAAC0B,aAAN,CAAoB,KAApB,EAA2BxC,QAAQ,CAAC,EAAD,EAAKsC,iBAAL,CAAnC,EAA4DC,OAAO,IAAIV,aAAX,IAA4Bf,KAAK,CAAC0B,aAAN,CAAoB1B,KAAK,CAAC2B,QAA1B,EAAoC,IAApC,EAA0C,QAA1C,CAAxF,CAAR;AACH,CAbD;;AAcA,eAAerB,QAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { openEditor } from '../../actionCreators';\nimport defaultOptions from '../../defaultOptions';\nimport { EditingMode } from '../../enums';\nimport { isEmpty } from '../../Utils/CommonUtils';\nimport { getElementCustomization } from '../../Utils/ComponentUtils';\nvar CellText = function (props) {\n    var childComponents = props.childComponents, column = props.column, format = props.format, dispatch = props.dispatch, editingMode = props.editingMode, rowKeyValue = props.rowKeyValue, value = props.value;\n    var formatedValue = format && format({ column: column, value: value });\n    formatedValue = formatedValue || (!isEmpty(value) && value.toString());\n    var _a = getElementCustomization({\n        className: defaultOptions.css.cellText,\n        onClick: function () {\n            if (editingMode === EditingMode.Cell) {\n                dispatch(openEditor(rowKeyValue, column.key));\n            }\n        },\n    }, props, childComponents.cellText), elementAttributes = _a.elementAttributes, content = _a.content;\n    return (React.createElement(\"div\", __assign({}, elementAttributes), content || formatedValue || React.createElement(React.Fragment, null, \"\\u00A0\")));\n};\nexport default CellText;"]},"metadata":{},"sourceType":"module"}