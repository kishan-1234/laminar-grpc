{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { DataType } from '../enums';\nimport { getValueByColumn, replaceValue } from './DataUtils';\nexport var convertToColumnTypes = function (data, columns) {\n  var newData = data.map(function (d) {\n    var nd = __assign({}, d);\n\n    columns.forEach(function (c) {\n      var value = getValueByColumn(nd, c);\n\n      if (value != null) {\n        switch (c.dataType) {\n          case DataType.String:\n            if (value.constructor !== String) {\n              nd = replaceValue(nd, c, value.toString());\n            }\n\n            break;\n\n          case DataType.Number:\n            if (value.constructor !== Number) {\n              nd = replaceValue(nd, c, Number(value));\n            }\n\n            break;\n\n          case DataType.Date:\n            if (value.constructor !== Date) {\n              nd = replaceValue(nd, c, new Date(value));\n            }\n\n            break;\n\n          case DataType.Boolean:\n            if (value.constructor !== Boolean) {\n              nd = replaceValue(nd, c, toBoolean(value));\n            }\n\n            break;\n        }\n      }\n    });\n    return nd;\n  });\n  return newData;\n};\nexport var toBoolean = function (value) {\n  if (typeof value === 'string') {\n    switch (value.toLowerCase().trim()) {\n      case 'true':\n      case 'yes':\n      case '1':\n        return true;\n\n      case 'false':\n      case 'no':\n      case '0':\n      case null:\n        return false;\n    }\n  }\n\n  return Boolean(value);\n};\nexport function isFunction(variableToCheck) {\n  if (variableToCheck instanceof Function) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Utils/TypeUtils.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","DataType","getValueByColumn","replaceValue","convertToColumnTypes","data","columns","newData","map","d","nd","forEach","c","value","dataType","String","constructor","toString","Number","Date","Boolean","toBoolean","toLowerCase","trim","isFunction","variableToCheck","Function"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { DataType } from '../enums';\nimport { getValueByColumn, replaceValue } from './DataUtils';\nexport var convertToColumnTypes = function (data, columns) {\n    var newData = data.map(function (d) {\n        var nd = __assign({}, d);\n        columns.forEach(function (c) {\n            var value = getValueByColumn(nd, c);\n            if (value != null) {\n                switch (c.dataType) {\n                    case DataType.String:\n                        if (value.constructor !== String) {\n                            nd = replaceValue(nd, c, value.toString());\n                        }\n                        break;\n                    case DataType.Number:\n                        if (value.constructor !== Number) {\n                            nd = replaceValue(nd, c, Number(value));\n                        }\n                        break;\n                    case DataType.Date:\n                        if (value.constructor !== Date) {\n                            nd = replaceValue(nd, c, new Date(value));\n                        }\n                        break;\n                    case DataType.Boolean:\n                        if (value.constructor !== Boolean) {\n                            nd = replaceValue(nd, c, toBoolean(value));\n                        }\n                        break;\n                }\n            }\n        });\n        return nd;\n    });\n    return newData;\n};\nexport var toBoolean = function (value) {\n    if (typeof value === 'string') {\n        switch (value.toLowerCase().trim()) {\n            case 'true':\n            case 'yes':\n            case '1': return true;\n            case 'false':\n            case 'no':\n            case '0':\n            case null: return false;\n        }\n    }\n    return Boolean(value);\n};\nexport function isFunction(variableToCheck) {\n    if (variableToCheck instanceof Function) {\n        return true;\n    }\n    return false;\n}"]},"metadata":{},"sourceType":"module"}