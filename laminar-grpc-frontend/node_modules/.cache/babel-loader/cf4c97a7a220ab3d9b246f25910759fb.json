{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar RelayModernQueryExecutor = require('./RelayModernQueryExecutor');\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\n\nvar RelayPublishQueue = require('./RelayPublishQueue');\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar defaultGetDataID = require('./defaultGetDataID');\n\nvar generateID = require('../util/generateID');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n\n    var _config$log, _config$UNSTABLE_defa, _config$UNSTABLE_DO_N, _config$scheduler, _config$isServer, _config$operationTrac;\n\n    this.configName = config.configName;\n    var handlerProvider = config.handlerProvider ? config.handlerProvider : RelayDefaultHandlerProvider;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n    }\n\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = config.network;\n    this._getDataID = (_config$UNSTABLE_DO_N = config.UNSTABLE_DO_NOT_USE_getDataID) !== null && _config$UNSTABLE_DO_N !== void 0 ? _config$UNSTABLE_DO_N : defaultGetDataID;\n    this._publishQueue = new RelayPublishQueue(config.store, handlerProvider, this._getDataID);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n\n    this.__setNet = function (newNet) {\n      return _this._network = newNet;\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require = require('./StoreInspector'),\n          inspect = _require.inspect;\n\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    } // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n\n\n    var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n\n    var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n\n    if (devToolsHook) {\n      devToolsHook.registerEnvironment(this);\n    }\n\n    this._missingFieldHandlers = config.missingFieldHandlers;\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n  }\n\n  var _proto = RelayModernEnvironment.prototype;\n\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n\n    return activeState === 'active';\n  };\n\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n\n        _this2._publishQueue.run();\n      });\n    };\n\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n\n      _this2._publishQueue.run();\n    });\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n\n      _this3._publishQueue.run();\n    });\n  };\n\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n\n      _this4._publishQueue.applyUpdate(newUpdate);\n\n      _this4._publishQueue.run();\n    });\n  };\n\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var _this5 = this;\n\n    var subscription = RelayObservable.create(function (sink) {\n      var source = RelayObservable.create(function (_sink) {});\n      var executor = RelayModernQueryExecutor.execute({\n        operation: optimisticConfig.operation,\n        operationExecutions: _this5._operationExecutions,\n        operationLoader: _this5._operationLoader,\n        optimisticConfig: optimisticConfig,\n        publishQueue: _this5._publishQueue,\n        scheduler: _this5._scheduler,\n        sink: sink,\n        source: source,\n        store: _this5._store,\n        updater: null,\n        operationTracker: _this5._operationTracker,\n        getDataID: _this5._getDataID,\n        treatMissingFieldsAsNull: _this5._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    }).subscribe({});\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers == null || this._missingFieldHandlers.length === 0) {\n      return this._store.check(operation);\n    }\n\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    var _this6 = this;\n\n    RelayObservable.create(function (sink) {\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this6._operationExecutions,\n        operationLoader: _this6._operationLoader,\n        optimisticConfig: null,\n        publishQueue: _this6._publishQueue,\n        scheduler: _this6._scheduler,\n        sink: sink,\n        source: RelayObservable.from({\n          data: payload\n        }),\n        store: _this6._store,\n        updater: null,\n        operationTracker: _this6._operationTracker,\n        getDataID: _this6._getDataID,\n        isClientPayload: true,\n        treatMissingFieldsAsNull: _this6._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    }).subscribe({});\n  };\n\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this7 = this;\n\n    this._scheduleUpdates(function () {\n      _this7._publishQueue.commitUpdate(updater);\n\n      _this7._publishQueue.run();\n    });\n  };\n\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this8 = this;\n\n    var target = RelayRecordSource.create();\n\n    var result = this._store.check(operation, {\n      target: target,\n      handlers: handlers\n    });\n\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this8._publishQueue.commitSource(target);\n\n        _this8._publishQueue.run();\n      });\n    }\n\n    return result;\n  };\n\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.execute = function execute(_ref) {\n    var _this9 = this;\n\n    var operation = _ref.operation,\n        cacheConfig = _ref.cacheConfig,\n        updater = _ref.updater;\n\n    var _this$__createLogObse = this.__createLogObserver(operation.request.node.params, operation.request.variables),\n        logObserver = _this$__createLogObse[0],\n        logRequestInfo = _this$__createLogObse[1];\n\n    return RelayObservable.create(function (sink) {\n      var source = _this9._network.execute(operation.request.node.params, operation.request.variables, cacheConfig || {}, null, logRequestInfo)[\"do\"](logObserver);\n\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this9._operationExecutions,\n        operationLoader: _this9._operationLoader,\n        optimisticConfig: null,\n        publishQueue: _this9._publishQueue,\n        scheduler: _this9._scheduler,\n        sink: sink,\n        source: source,\n        store: _this9._store,\n        updater: updater,\n        operationTracker: _this9._operationTracker,\n        getDataID: _this9._getDataID,\n        treatMissingFieldsAsNull: _this9._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeMutation = function executeMutation(_ref2) {\n    var _this10 = this;\n\n    var cacheConfig = _ref2.cacheConfig,\n        operation = _ref2.operation,\n        optimisticResponse = _ref2.optimisticResponse,\n        optimisticUpdater = _ref2.optimisticUpdater,\n        updater = _ref2.updater,\n        uploadables = _ref2.uploadables;\n\n    var _this$__createLogObse2 = this.__createLogObserver(operation.request.node.params, operation.request.variables),\n        logObserver = _this$__createLogObse2[0],\n        logRequestInfo = _this$__createLogObse2[1];\n\n    return RelayObservable.create(function (sink) {\n      var optimisticConfig;\n\n      if (optimisticResponse || optimisticUpdater) {\n        optimisticConfig = {\n          operation: operation,\n          response: optimisticResponse,\n          updater: optimisticUpdater\n        };\n      }\n\n      var source = _this10._network.execute(operation.request.node.params, operation.request.variables, _objectSpread({}, cacheConfig, {\n        force: true\n      }), uploadables, logRequestInfo)[\"do\"](logObserver);\n\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this10._operationExecutions,\n        operationLoader: _this10._operationLoader,\n        optimisticConfig: optimisticConfig,\n        publishQueue: _this10._publishQueue,\n        scheduler: _this10._scheduler,\n        sink: sink,\n        source: source,\n        store: _this10._store,\n        updater: updater,\n        operationTracker: _this10._operationTracker,\n        getDataID: _this10._getDataID,\n        treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and comitted to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeWithSource = function executeWithSource(_ref3) {\n    var _this11 = this;\n\n    var operation = _ref3.operation,\n        source = _ref3.source;\n    return RelayObservable.create(function (sink) {\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this11._operationExecutions,\n        operationLoader: _this11._operationLoader,\n        operationTracker: _this11._operationTracker,\n        optimisticConfig: null,\n        publishQueue: _this11._publishQueue,\n        scheduler: _this11._scheduler,\n        sink: sink,\n        source: source,\n        store: _this11._store,\n        getDataID: _this11._getDataID,\n        treatMissingFieldsAsNull: _this11._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n\n  _proto.__createLogObserver = function __createLogObserver(params, variables) {\n    var transactionID = generateID();\n    var log = this.__log;\n    var logObserver = {\n      start: function start(subscription) {\n        log({\n          name: 'execute.start',\n          transactionID: transactionID,\n          params: params,\n          variables: variables\n        });\n      },\n      next: function next(response) {\n        log({\n          name: 'execute.next',\n          transactionID: transactionID,\n          response: response\n        });\n      },\n      error: function error(_error) {\n        log({\n          name: 'execute.error',\n          transactionID: transactionID,\n          error: _error\n        });\n      },\n      complete: function complete() {\n        log({\n          name: 'execute.complete',\n          transactionID: transactionID\n        });\n      },\n      unsubscribe: function unsubscribe() {\n        log({\n          name: 'execute.unsubscribe',\n          transactionID: transactionID\n        });\n      }\n    };\n\n    var logRequestInfo = function logRequestInfo(info) {\n      log({\n        name: 'execute.info',\n        transactionID: transactionID,\n        info: info\n      });\n    };\n\n    return [logObserver, logRequestInfo];\n  };\n\n  return RelayModernEnvironment;\n}(); // Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\n\n\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\n\nfunction emptyFunction() {}\n\nmodule.exports = RelayModernEnvironment;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/store/RelayModernEnvironment.js"],"names":["_interopRequireDefault","require","_defineProperty2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","RelayDefaultHandlerProvider","RelayFeatureFlags","RelayModernQueryExecutor","RelayObservable","RelayOperationTracker","RelayPublishQueue","RelayRecordSource","defaultGetDataID","generateID","invariant","RelayModernEnvironment","config","_this","_config$log","_config$UNSTABLE_defa","_config$UNSTABLE_DO_N","_config$scheduler","_config$isServer","_config$operationTrac","configName","handlerProvider","_treatMissingFieldsAsNull","treatMissingFieldsAsNull","operationLoader","process","env","NODE_ENV","get","load","__log","log","emptyFunction","_defaultRenderPolicy","UNSTABLE_defaultRenderPolicy","ENABLE_PARTIAL_RENDERING_DEFAULT","_operationLoader","_operationExecutions","Map","_network","network","_getDataID","UNSTABLE_DO_NOT_USE_getDataID","_publishQueue","store","_scheduler","scheduler","_store","options","_isServer","isServer","__setNet","newNet","_require","inspect","DEBUG_inspect","dataID","_global","global","window","undefined","devToolsHook","__RELAY_DEVTOOLS_HOOK__","registerEnvironment","_missingFieldHandlers","missingFieldHandlers","_operationTracker","operationTracker","_proto","prototype","getStore","getNetwork","getOperationTracker","isRequestActive","requestIdentifier","activeState","UNSTABLE_getDefaultRenderPolicy","applyUpdate","optimisticUpdate","_this2","dispose","_scheduleUpdates","revertUpdate","run","update","_this3","replaceUpdate","newUpdate","_this4","applyMutation","optimisticConfig","_this5","subscription","create","sink","_sink","executor","execute","operation","operationExecutions","publishQueue","updater","getDataID","cancel","subscribe","unsubscribe","check","_checkSelectorAndHandleMissingFields","commitPayload","payload","_this6","from","data","isClientPayload","commitUpdate","_this7","lookup","readSelector","snapshot","callback","retain","handlers","_this8","result","size","commitSource","task","schedule","_ref","_this9","cacheConfig","_this$__createLogObse","__createLogObserver","request","node","params","variables","logObserver","logRequestInfo","executeMutation","_ref2","_this10","optimisticResponse","optimisticUpdater","uploadables","_this$__createLogObse2","response","force","executeWithSource","_ref3","_this11","toJSON","_this$configName","concat","transactionID","start","name","next","error","_error","complete","info","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\n\nvar RelayModernQueryExecutor = require('./RelayModernQueryExecutor');\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\n\nvar RelayPublishQueue = require('./RelayPublishQueue');\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar defaultGetDataID = require('./defaultGetDataID');\n\nvar generateID = require('../util/generateID');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n\n    var _config$log, _config$UNSTABLE_defa, _config$UNSTABLE_DO_N, _config$scheduler, _config$isServer, _config$operationTrac;\n\n    this.configName = config.configName;\n    var handlerProvider = config.handlerProvider ? config.handlerProvider : RelayDefaultHandlerProvider;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n    }\n\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = config.network;\n    this._getDataID = (_config$UNSTABLE_DO_N = config.UNSTABLE_DO_NOT_USE_getDataID) !== null && _config$UNSTABLE_DO_N !== void 0 ? _config$UNSTABLE_DO_N : defaultGetDataID;\n    this._publishQueue = new RelayPublishQueue(config.store, handlerProvider, this._getDataID);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n\n    this.__setNet = function (newNet) {\n      return _this._network = newNet;\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require = require('./StoreInspector'),\n          inspect = _require.inspect;\n\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    } // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n\n\n    var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n\n    var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n\n    if (devToolsHook) {\n      devToolsHook.registerEnvironment(this);\n    }\n\n    this._missingFieldHandlers = config.missingFieldHandlers;\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n  }\n\n  var _proto = RelayModernEnvironment.prototype;\n\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n\n    return activeState === 'active';\n  };\n\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n\n        _this2._publishQueue.run();\n      });\n    };\n\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n\n      _this2._publishQueue.run();\n    });\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n\n      _this3._publishQueue.run();\n    });\n  };\n\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n\n      _this4._publishQueue.applyUpdate(newUpdate);\n\n      _this4._publishQueue.run();\n    });\n  };\n\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var _this5 = this;\n\n    var subscription = RelayObservable.create(function (sink) {\n      var source = RelayObservable.create(function (_sink) {});\n      var executor = RelayModernQueryExecutor.execute({\n        operation: optimisticConfig.operation,\n        operationExecutions: _this5._operationExecutions,\n        operationLoader: _this5._operationLoader,\n        optimisticConfig: optimisticConfig,\n        publishQueue: _this5._publishQueue,\n        scheduler: _this5._scheduler,\n        sink: sink,\n        source: source,\n        store: _this5._store,\n        updater: null,\n        operationTracker: _this5._operationTracker,\n        getDataID: _this5._getDataID,\n        treatMissingFieldsAsNull: _this5._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    }).subscribe({});\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers == null || this._missingFieldHandlers.length === 0) {\n      return this._store.check(operation);\n    }\n\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    var _this6 = this;\n\n    RelayObservable.create(function (sink) {\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this6._operationExecutions,\n        operationLoader: _this6._operationLoader,\n        optimisticConfig: null,\n        publishQueue: _this6._publishQueue,\n        scheduler: _this6._scheduler,\n        sink: sink,\n        source: RelayObservable.from({\n          data: payload\n        }),\n        store: _this6._store,\n        updater: null,\n        operationTracker: _this6._operationTracker,\n        getDataID: _this6._getDataID,\n        isClientPayload: true,\n        treatMissingFieldsAsNull: _this6._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    }).subscribe({});\n  };\n\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this7 = this;\n\n    this._scheduleUpdates(function () {\n      _this7._publishQueue.commitUpdate(updater);\n\n      _this7._publishQueue.run();\n    });\n  };\n\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this8 = this;\n\n    var target = RelayRecordSource.create();\n\n    var result = this._store.check(operation, {\n      target: target,\n      handlers: handlers\n    });\n\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this8._publishQueue.commitSource(target);\n\n        _this8._publishQueue.run();\n      });\n    }\n\n    return result;\n  };\n\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.execute = function execute(_ref) {\n    var _this9 = this;\n\n    var operation = _ref.operation,\n        cacheConfig = _ref.cacheConfig,\n        updater = _ref.updater;\n\n    var _this$__createLogObse = this.__createLogObserver(operation.request.node.params, operation.request.variables),\n        logObserver = _this$__createLogObse[0],\n        logRequestInfo = _this$__createLogObse[1];\n\n    return RelayObservable.create(function (sink) {\n      var source = _this9._network.execute(operation.request.node.params, operation.request.variables, cacheConfig || {}, null, logRequestInfo)[\"do\"](logObserver);\n\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this9._operationExecutions,\n        operationLoader: _this9._operationLoader,\n        optimisticConfig: null,\n        publishQueue: _this9._publishQueue,\n        scheduler: _this9._scheduler,\n        sink: sink,\n        source: source,\n        store: _this9._store,\n        updater: updater,\n        operationTracker: _this9._operationTracker,\n        getDataID: _this9._getDataID,\n        treatMissingFieldsAsNull: _this9._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeMutation = function executeMutation(_ref2) {\n    var _this10 = this;\n\n    var cacheConfig = _ref2.cacheConfig,\n        operation = _ref2.operation,\n        optimisticResponse = _ref2.optimisticResponse,\n        optimisticUpdater = _ref2.optimisticUpdater,\n        updater = _ref2.updater,\n        uploadables = _ref2.uploadables;\n\n    var _this$__createLogObse2 = this.__createLogObserver(operation.request.node.params, operation.request.variables),\n        logObserver = _this$__createLogObse2[0],\n        logRequestInfo = _this$__createLogObse2[1];\n\n    return RelayObservable.create(function (sink) {\n      var optimisticConfig;\n\n      if (optimisticResponse || optimisticUpdater) {\n        optimisticConfig = {\n          operation: operation,\n          response: optimisticResponse,\n          updater: optimisticUpdater\n        };\n      }\n\n      var source = _this10._network.execute(operation.request.node.params, operation.request.variables, _objectSpread({}, cacheConfig, {\n        force: true\n      }), uploadables, logRequestInfo)[\"do\"](logObserver);\n\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this10._operationExecutions,\n        operationLoader: _this10._operationLoader,\n        optimisticConfig: optimisticConfig,\n        publishQueue: _this10._publishQueue,\n        scheduler: _this10._scheduler,\n        sink: sink,\n        source: source,\n        store: _this10._store,\n        updater: updater,\n        operationTracker: _this10._operationTracker,\n        getDataID: _this10._getDataID,\n        treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  }\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and comitted to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */\n  ;\n\n  _proto.executeWithSource = function executeWithSource(_ref3) {\n    var _this11 = this;\n\n    var operation = _ref3.operation,\n        source = _ref3.source;\n    return RelayObservable.create(function (sink) {\n      var executor = RelayModernQueryExecutor.execute({\n        operation: operation,\n        operationExecutions: _this11._operationExecutions,\n        operationLoader: _this11._operationLoader,\n        operationTracker: _this11._operationTracker,\n        optimisticConfig: null,\n        publishQueue: _this11._publishQueue,\n        scheduler: _this11._scheduler,\n        sink: sink,\n        source: source,\n        store: _this11._store,\n        getDataID: _this11._getDataID,\n        treatMissingFieldsAsNull: _this11._treatMissingFieldsAsNull\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n\n  _proto.__createLogObserver = function __createLogObserver(params, variables) {\n    var transactionID = generateID();\n    var log = this.__log;\n    var logObserver = {\n      start: function start(subscription) {\n        log({\n          name: 'execute.start',\n          transactionID: transactionID,\n          params: params,\n          variables: variables\n        });\n      },\n      next: function next(response) {\n        log({\n          name: 'execute.next',\n          transactionID: transactionID,\n          response: response\n        });\n      },\n      error: function error(_error) {\n        log({\n          name: 'execute.error',\n          transactionID: transactionID,\n          error: _error\n        });\n      },\n      complete: function complete() {\n        log({\n          name: 'execute.complete',\n          transactionID: transactionID\n        });\n      },\n      unsubscribe: function unsubscribe() {\n        log({\n          name: 'execute.unsubscribe',\n          transactionID: transactionID\n        });\n      }\n    };\n\n    var logRequestInfo = function logRequestInfo(info) {\n      log({\n        name: 'execute.info',\n        transactionID: transactionID,\n        info: info\n      });\n    };\n\n    return [logObserver, logRequestInfo];\n  };\n\n  return RelayModernEnvironment;\n}(); // Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\n\n\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\n\nfunction emptyFunction() {}\n\nmodule.exports = RelayModernEnvironment;"]},"metadata":{},"sourceType":"script"}