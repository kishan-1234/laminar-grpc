{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar ConnectionHandler = require('./ConnectionHandler');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar DeleteRecordHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n\n    if (record != null) {\n      var id = record.getValue(payload.fieldKey);\n\n      if (typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    }\n  }\n};\nvar AppendEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeBefore)\n};\n\nfunction edgeUpdater(insertFn) {\n  return function (store, payload) {\n    var record = store.get(payload.dataID);\n\n    if (record == null) {\n      return;\n    }\n\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var serverEdge = record.getLinkedRecord(payload.fieldKey, payload.args);\n\n    var _iterator = _createForOfIteratorHelper(connections),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var connectionID = _step.value;\n        var connection = store.get(connectionID);\n\n        if (connection == null) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n        !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n        insertFn(connection, clientEdge);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nmodule.exports = {\n  AppendEdgeHandler: AppendEdgeHandler,\n  DeleteRecordHandler: DeleteRecordHandler,\n  PrependEdgeHandler: PrependEdgeHandler\n};","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/handlers/connection/MutationHandlers.js"],"names":["_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","ConnectionHandler","require","invariant","warning","DeleteRecordHandler","update","store","payload","record","get","dataID","id","getValue","fieldKey","AppendEdgeHandler","edgeUpdater","insertEdgeAfter","PrependEdgeHandler","insertEdgeBefore","insertFn","connections","handleArgs","process","env","NODE_ENV","serverEdge","getLinkedRecord","args","_iterator","_step","connectionID","connection","concat","clientEdge","buildConnectionEdge","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar ConnectionHandler = require('./ConnectionHandler');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar DeleteRecordHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n\n    if (record != null) {\n      var id = record.getValue(payload.fieldKey);\n\n      if (typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    }\n  }\n};\nvar AppendEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeBefore)\n};\n\nfunction edgeUpdater(insertFn) {\n  return function (store, payload) {\n    var record = store.get(payload.dataID);\n\n    if (record == null) {\n      return;\n    }\n\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var serverEdge = record.getLinkedRecord(payload.fieldKey, payload.args);\n\n    var _iterator = _createForOfIteratorHelper(connections),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var connectionID = _step.value;\n        var connection = store.get(connectionID);\n\n        if (connection == null) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n        !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n        insertFn(connection, clientEdge);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nmodule.exports = {\n  AppendEdgeHandler: AppendEdgeHandler,\n  DeleteRecordHandler: DeleteRecordHandler,\n  PrependEdgeHandler: PrependEdgeHandler\n};"]},"metadata":{},"sourceType":"script"}