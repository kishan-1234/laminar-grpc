{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { reorderRows } from '../../actionCreators';\nimport defaultOptions from '../../defaultOptions';\nimport { addElementAttributes, getElementCustomization } from '../../Utils/ComponentUtils';\nimport { getDraggableProps } from '../../Utils/PropsUtils';\nimport DataRowContent from '../DataRowContent/DataRowContent';\nimport EmptyCells from '../EmptyCells/EmptyCells';\n\nvar DataRow = function (props) {\n  var dispatch = props.dispatch,\n      groupColumnsCount = props.groupColumnsCount,\n      isSelectedRow = props.isSelectedRow,\n      rowKeyValue = props.rowKeyValue,\n      rowReordering = props.rowReordering,\n      trRef = props.trRef;\n  var dataRow = props.childComponents.dataRow;\n\n  if (rowReordering) {\n    var reorderedRowProps = getDraggableProps(rowKeyValue, dispatch, reorderRows, defaultOptions.css.draggedRow, defaultOptions.css.dragOverRow);\n    dataRow = addElementAttributes(reorderedRowProps, props, dataRow);\n  }\n\n  var _a = getElementCustomization({\n    className: defaultOptions.css.row + \" \" + (isSelectedRow ? defaultOptions.css.rowSelected : '')\n  }, props, dataRow),\n      elementAttributes = _a.elementAttributes,\n      content = _a.content;\n\n  return React.createElement(\"tr\", __assign({}, elementAttributes, {\n    ref: trRef\n  }), React.createElement(EmptyCells, {\n    count: groupColumnsCount\n  }), content ? React.createElement(\"td\", {\n    className: defaultOptions.css.cell\n  }, content) : React.createElement(DataRowContent, __assign({}, props)));\n};\n\nexport default DataRow;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Components/DataRow/DataRow.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","reorderRows","defaultOptions","addElementAttributes","getElementCustomization","getDraggableProps","DataRowContent","EmptyCells","DataRow","props","dispatch","groupColumnsCount","isSelectedRow","rowKeyValue","rowReordering","trRef","dataRow","childComponents","reorderedRowProps","css","draggedRow","dragOverRow","_a","className","row","rowSelected","elementAttributes","content","createElement","ref","count","cell"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { reorderRows } from '../../actionCreators';\nimport defaultOptions from '../../defaultOptions';\nimport { addElementAttributes, getElementCustomization } from '../../Utils/ComponentUtils';\nimport { getDraggableProps } from '../../Utils/PropsUtils';\nimport DataRowContent from '../DataRowContent/DataRowContent';\nimport EmptyCells from '../EmptyCells/EmptyCells';\nvar DataRow = function (props) {\n    var dispatch = props.dispatch, groupColumnsCount = props.groupColumnsCount, isSelectedRow = props.isSelectedRow, rowKeyValue = props.rowKeyValue, rowReordering = props.rowReordering, trRef = props.trRef;\n    var dataRow = props.childComponents.dataRow;\n    if (rowReordering) {\n        var reorderedRowProps = getDraggableProps(rowKeyValue, dispatch, reorderRows, defaultOptions.css.draggedRow, defaultOptions.css.dragOverRow);\n        dataRow = addElementAttributes(reorderedRowProps, props, dataRow);\n    }\n    var _a = getElementCustomization({\n        className: defaultOptions.css.row + \" \" + (isSelectedRow ? defaultOptions.css.rowSelected : '')\n    }, props, dataRow), elementAttributes = _a.elementAttributes, content = _a.content;\n    return (React.createElement(\"tr\", __assign({}, elementAttributes, { ref: trRef }),\n        React.createElement(EmptyCells, { count: groupColumnsCount }),\n        content\n            ? React.createElement(\"td\", { className: defaultOptions.css.cell }, content)\n            : React.createElement(DataRowContent, __assign({}, props))));\n};\nexport default DataRow;"]},"metadata":{},"sourceType":"module"}