{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * Fail fast if the user supplies invalid fragments as input.\n */\n\n\nfunction assertFragmentMap(componentName, fragmentSpec) {\n  !(fragmentSpec && typeof fragmentSpec === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'Expected a set of GraphQL fragments, got `%s` instead.', componentName, fragmentSpec) : invariant(false) : void 0;\n\n  for (var key in fragmentSpec) {\n    if (fragmentSpec.hasOwnProperty(key)) {\n      var fragment = fragmentSpec[key];\n      !(fragment && (typeof fragment === 'object' || typeof fragment === 'function')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'The value of fragment `%s` was expected to be a fragment, got `%s` instead.', componentName, key, fragment) : invariant(false) : void 0;\n    }\n  }\n}\n\nmodule.exports = assertFragmentMap;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/react-relay/lib/assertFragmentMap.js"],"names":["invariant","require","assertFragmentMap","componentName","fragmentSpec","process","env","NODE_ENV","key","hasOwnProperty","fragment","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;AAEA;;;;;AAGA,SAASC,iBAAT,CAA2BC,aAA3B,EAA0CC,YAA1C,EAAwD;AACtD,IAAEA,YAAY,IAAI,OAAOA,YAAP,KAAwB,QAA1C,IAAsDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,SAAS,CAAC,KAAD,EAAQ,gDAAgD,wDAAxD,EAAkHG,aAAlH,EAAiIC,YAAjI,CAAjD,GAAkMJ,SAAS,CAAC,KAAD,CAAjQ,GAA2Q,KAAK,CAAhR;;AAEA,OAAK,IAAIQ,GAAT,IAAgBJ,YAAhB,EAA8B;AAC5B,QAAIA,YAAY,CAACK,cAAb,CAA4BD,GAA5B,CAAJ,EAAsC;AACpC,UAAIE,QAAQ,GAAGN,YAAY,CAACI,GAAD,CAA3B;AACA,QAAEE,QAAQ,KAAK,OAAOA,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,UAAzD,CAAV,IAAkFL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,SAAS,CAAC,KAAD,EAAQ,gDAAgD,6EAAxD,EAAuIG,aAAvI,EAAsJK,GAAtJ,EAA2JE,QAA3J,CAAjD,GAAwNV,SAAS,CAAC,KAAD,CAAnT,GAA6T,KAAK,CAAlU;AACD;AACF;AACF;;AAEDW,MAAM,CAACC,OAAP,GAAiBV,iBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\n/**\n * Fail fast if the user supplies invalid fragments as input.\n */\nfunction assertFragmentMap(componentName, fragmentSpec) {\n  !(fragmentSpec && typeof fragmentSpec === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'Expected a set of GraphQL fragments, got `%s` instead.', componentName, fragmentSpec) : invariant(false) : void 0;\n\n  for (var key in fragmentSpec) {\n    if (fragmentSpec.hasOwnProperty(key)) {\n      var fragment = fragmentSpec[key];\n      !(fragment && (typeof fragment === 'object' || typeof fragment === 'function')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'The value of fragment `%s` was expected to be a fragment, got `%s` instead.', componentName, key, fragment) : invariant(false) : void 0;\n    }\n  }\n}\n\nmodule.exports = assertFragmentMap;"]},"metadata":{},"sourceType":"script"}