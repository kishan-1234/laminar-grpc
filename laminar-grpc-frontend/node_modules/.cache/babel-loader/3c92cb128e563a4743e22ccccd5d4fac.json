{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require.createOperationDescriptor;\n\nvar _require2 = require('./GraphQLTag'),\n    getRequest = _require2.getRequest;\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\n\n\nfunction fetchQuery(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n\n  var operation = createOperationDescriptor(query, variables);\n  return environment.execute({\n    operation: operation,\n    cacheConfig: cacheConfig\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchQuery;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/relay-runtime/lib/query/fetchQuery.js"],"names":["_require","require","createOperationDescriptor","_require2","getRequest","fetchQuery","environment","taggedNode","variables","cacheConfig","query","params","operationKind","Error","operation","execute","map","lookup","fragment","data","toPromise","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,yCAAD,CAAtB;AAAA,IACIC,yBAAyB,GAAGF,QAAQ,CAACE,yBADzC;;AAGA,IAAIC,SAAS,GAAGF,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIG,UAAU,GAAGD,SAAS,CAACC,UAD3B;AAGA;;;;;;;AAKA,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,WAAxD,EAAqE;AACnE,MAAIC,KAAK,GAAGN,UAAU,CAACG,UAAD,CAAtB;;AAEA,MAAIG,KAAK,CAACC,MAAN,CAAaC,aAAb,KAA+B,OAAnC,EAA4C;AAC1C,UAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,MAAIC,SAAS,GAAGZ,yBAAyB,CAACQ,KAAD,EAAQF,SAAR,CAAzC;AACA,SAAOF,WAAW,CAACS,OAAZ,CAAoB;AACzBD,IAAAA,SAAS,EAAEA,SADc;AAEzBL,IAAAA,WAAW,EAAEA;AAFY,GAApB,EAGJO,GAHI,CAGA,YAAY;AACjB,WAAOV,WAAW,CAACW,MAAZ,CAAmBH,SAAS,CAACI,QAA7B,EAAuCC,IAA9C;AACD,GALM,EAKJC,SALI,EAAP;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiBjB,UAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require.createOperationDescriptor;\n\nvar _require2 = require('./GraphQLTag'),\n    getRequest = _require2.getRequest;\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\nfunction fetchQuery(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n\n  var operation = createOperationDescriptor(query, variables);\n  return environment.execute({\n    operation: operation,\n    cacheConfig: cacheConfig\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchQuery;"]},"metadata":{},"sourceType":"script"}