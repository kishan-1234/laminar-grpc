{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = require('react');\n\nvar ReactRelayContext = require('./ReactRelayContext');\n\nvar assertFragmentMap = require('./assertFragmentMap');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar mapObject = require(\"fbjs/lib/mapObject\");\n\nvar readContext = require('./readContext');\n\nvar _require = require('./ReactRelayContainerUtils'),\n    getComponentName = _require.getComponentName,\n    getContainerName = _require.getContainerName;\n\nvar _require2 = require('relay-runtime'),\n    getFragment = _require2.getFragment;\n/**\n * Helper to create the Relay HOCs with ref forwarding, setting the displayName\n * and reading the React context.\n */\n\n\nfunction buildReactRelayContainer(ComponentClass, fragmentSpec, createContainerWithFragments) {\n  // Sanity-check user-defined fragment input\n  var containerName = getContainerName(ComponentClass);\n  assertFragmentMap(getComponentName(ComponentClass), fragmentSpec);\n  var fragments = mapObject(fragmentSpec, getFragment);\n  var Container = createContainerWithFragments(ComponentClass, fragments);\n  Container.displayName = containerName;\n\n  function forwardRef(props, ref) {\n    var context = readContext(ReactRelayContext);\n    !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`%s` tried to render a context that was not valid this means that ' + '`%s` was rendered outside of a query renderer.', containerName, containerName) : invariant(false) : void 0;\n    return /*#__PURE__*/React.createElement(Container, (0, _extends2[\"default\"])({}, props, {\n      __relayContext: context,\n      componentRef: props.componentRef || ref\n    }));\n  }\n\n  forwardRef.displayName = containerName;\n  var ForwardContainer = React.forwardRef(forwardRef);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Used by RelayModernTestUtils\n    ForwardContainer.__ComponentClass = ComponentClass;\n    ForwardContainer.displayName = containerName;\n  } // $FlowFixMe[incompatible-return]\n\n\n  return ForwardContainer;\n}\n\nmodule.exports = buildReactRelayContainer;","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/react-relay/lib/buildReactRelayContainer.js"],"names":["_interopRequireDefault","require","_extends2","React","ReactRelayContext","assertFragmentMap","invariant","mapObject","readContext","_require","getComponentName","getContainerName","_require2","getFragment","buildReactRelayContainer","ComponentClass","fragmentSpec","createContainerWithFragments","containerName","fragments","Container","displayName","forwardRef","props","ref","context","process","env","NODE_ENV","createElement","__relayContext","componentRef","ForwardContainer","__ComponentClass","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,SAAS,GAAGF,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAIK,SAAS,GAAGL,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIO,WAAW,GAAGP,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,4BAAD,CAAtB;AAAA,IACIS,gBAAgB,GAAGD,QAAQ,CAACC,gBADhC;AAAA,IAEIC,gBAAgB,GAAGF,QAAQ,CAACE,gBAFhC;;AAIA,IAAIC,SAAS,GAAGX,OAAO,CAAC,eAAD,CAAvB;AAAA,IACIY,WAAW,GAAGD,SAAS,CAACC,WAD5B;AAGA;;;;;;AAIA,SAASC,wBAAT,CAAkCC,cAAlC,EAAkDC,YAAlD,EAAgEC,4BAAhE,EAA8F;AAC5F;AACA,MAAIC,aAAa,GAAGP,gBAAgB,CAACI,cAAD,CAApC;AACAV,EAAAA,iBAAiB,CAACK,gBAAgB,CAACK,cAAD,CAAjB,EAAmCC,YAAnC,CAAjB;AACA,MAAIG,SAAS,GAAGZ,SAAS,CAACS,YAAD,EAAeH,WAAf,CAAzB;AACA,MAAIO,SAAS,GAAGH,4BAA4B,CAACF,cAAD,EAAiBI,SAAjB,CAA5C;AACAC,EAAAA,SAAS,CAACC,WAAV,GAAwBH,aAAxB;;AAEA,WAASI,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAIC,OAAO,GAAGjB,WAAW,CAACJ,iBAAD,CAAzB;AACA,MAAEqB,OAAO,IAAI,IAAb,IAAqBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,SAAS,CAAC,KAAD,EAAQ,uEAAuE,gDAA/E,EAAiIY,aAAjI,EAAgJA,aAAhJ,CAAjD,GAAkNZ,SAAS,CAAC,KAAD,CAAhP,GAA0P,KAAK,CAA/P;AACA,WAAO,aAAaH,KAAK,CAAC0B,aAAN,CAAoBT,SAApB,EAA+B,CAAC,GAAGlB,SAAS,CAAC,SAAD,CAAb,EAA0B,EAA1B,EAA8BqB,KAA9B,EAAqC;AACtFO,MAAAA,cAAc,EAAEL,OADsE;AAEtFM,MAAAA,YAAY,EAAER,KAAK,CAACQ,YAAN,IAAsBP;AAFkD,KAArC,CAA/B,CAApB;AAID;;AAEDF,EAAAA,UAAU,CAACD,WAAX,GAAyBH,aAAzB;AACA,MAAIc,gBAAgB,GAAG7B,KAAK,CAACmB,UAAN,CAAiBA,UAAjB,CAAvB;;AAEA,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAI,IAAAA,gBAAgB,CAACC,gBAAjB,GAAoClB,cAApC;AACAiB,IAAAA,gBAAgB,CAACX,WAAjB,GAA+BH,aAA/B;AACD,GAxB2F,CAwB1F;;;AAGF,SAAOc,gBAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBrB,wBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = require('react');\n\nvar ReactRelayContext = require('./ReactRelayContext');\n\nvar assertFragmentMap = require('./assertFragmentMap');\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar mapObject = require(\"fbjs/lib/mapObject\");\n\nvar readContext = require('./readContext');\n\nvar _require = require('./ReactRelayContainerUtils'),\n    getComponentName = _require.getComponentName,\n    getContainerName = _require.getContainerName;\n\nvar _require2 = require('relay-runtime'),\n    getFragment = _require2.getFragment;\n\n/**\n * Helper to create the Relay HOCs with ref forwarding, setting the displayName\n * and reading the React context.\n */\nfunction buildReactRelayContainer(ComponentClass, fragmentSpec, createContainerWithFragments) {\n  // Sanity-check user-defined fragment input\n  var containerName = getContainerName(ComponentClass);\n  assertFragmentMap(getComponentName(ComponentClass), fragmentSpec);\n  var fragments = mapObject(fragmentSpec, getFragment);\n  var Container = createContainerWithFragments(ComponentClass, fragments);\n  Container.displayName = containerName;\n\n  function forwardRef(props, ref) {\n    var context = readContext(ReactRelayContext);\n    !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`%s` tried to render a context that was not valid this means that ' + '`%s` was rendered outside of a query renderer.', containerName, containerName) : invariant(false) : void 0;\n    return /*#__PURE__*/React.createElement(Container, (0, _extends2[\"default\"])({}, props, {\n      __relayContext: context,\n      componentRef: props.componentRef || ref\n    }));\n  }\n\n  forwardRef.displayName = containerName;\n  var ForwardContainer = React.forwardRef(forwardRef);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Used by RelayModernTestUtils\n    ForwardContainer.__ComponentClass = ComponentClass;\n    ForwardContainer.displayName = containerName;\n  } // $FlowFixMe[incompatible-return]\n\n\n  return ForwardContainer;\n}\n\nmodule.exports = buildReactRelayContainer;"]},"metadata":{},"sourceType":"script"}