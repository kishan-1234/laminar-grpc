{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { SortDirection, SortingMode } from '../enums';\nimport { getValueByColumn } from './DataUtils';\nexport var sortData = function (columns, data) {\n  var sortedColumn = columns.find(function (column) {\n    return column.sortDirection;\n  });\n\n  if (!sortedColumn) {\n    return data;\n  }\n\n  var sortFunc = sortedColumn.sortDirection === SortDirection.Ascend ? ascendSort(sortedColumn) : descendSort(sortedColumn);\n\n  var newData = __spreadArrays(data).sort(sortFunc);\n\n  return newData;\n};\nexport var ascendSort = function (sortedColumn) {\n  return function (a, b) {\n    var aValue = getValueByColumn(a, sortedColumn);\n    var bValue = getValueByColumn(b, sortedColumn);\n\n    if (aValue === bValue) {\n      return 0;\n    } else if (aValue == null) {\n      return -1;\n    } else if (bValue == null) {\n      return 1;\n    }\n\n    return aValue < bValue ? -1 : 1;\n  };\n};\nexport var descendSort = function (sortedColumn) {\n  return function (a, b) {\n    var aValue = getValueByColumn(a, sortedColumn);\n    var bValue = getValueByColumn(b, sortedColumn);\n\n    if (aValue === bValue) {\n      return 0;\n    } else if (aValue == null) {\n      return 1;\n    } else if (bValue == null) {\n      return -1;\n    }\n\n    return aValue > bValue ? -1 : 1;\n  };\n};\nexport var isSortingEnabled = function (sortingMode) {\n  return sortingMode === SortingMode.Single;\n};","map":{"version":3,"sources":["/Users/gayatri/work/laminar-grpc/frontend/node_modules/ka-table/Utils/SortUtils.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","SortDirection","SortingMode","getValueByColumn","sortData","columns","data","sortedColumn","find","column","sortDirection","sortFunc","Ascend","ascendSort","descendSort","newData","sort","b","aValue","bValue","isSortingEnabled","sortingMode","Single"],"mappings":"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","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { SortDirection, SortingMode } from '../enums';\nimport { getValueByColumn } from './DataUtils';\nexport var sortData = function (columns, data) {\n    var sortedColumn = columns.find(function (column) { return column.sortDirection; });\n    if (!sortedColumn) {\n        return data;\n    }\n    var sortFunc = sortedColumn.sortDirection === SortDirection.Ascend\n        ? ascendSort(sortedColumn) : descendSort(sortedColumn);\n    var newData = __spreadArrays(data).sort(sortFunc);\n    return newData;\n};\nexport var ascendSort = function (sortedColumn) {\n    return function (a, b) {\n        var aValue = getValueByColumn(a, sortedColumn);\n        var bValue = getValueByColumn(b, sortedColumn);\n        if (aValue === bValue) {\n            return 0;\n        }\n        else if (aValue == null) {\n            return -1;\n        }\n        else if (bValue == null) {\n            return 1;\n        }\n        return aValue < bValue ? -1 : 1;\n    };\n};\nexport var descendSort = function (sortedColumn) {\n    return function (a, b) {\n        var aValue = getValueByColumn(a, sortedColumn);\n        var bValue = getValueByColumn(b, sortedColumn);\n        if (aValue === bValue) {\n            return 0;\n        }\n        else if (aValue == null) {\n            return 1;\n        }\n        else if (bValue == null) {\n            return -1;\n        }\n        return aValue > bValue ? -1 : 1;\n    };\n};\nexport var isSortingEnabled = function (sortingMode) { return sortingMode === SortingMode.Single; };"]},"metadata":{},"sourceType":"module"}