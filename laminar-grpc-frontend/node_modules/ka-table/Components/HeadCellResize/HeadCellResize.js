import * as React from 'react';
import { resizeColumn } from '../../actionCreators';
import defaultOptions from '../../defaultOptions';
import { getMinWidth, getMouseMove, getValidatedWidth, HeadCellResizeStateAction, } from '../../Utils/CellResizeUtils';
import { getEventListenerEffect } from '../../Utils/EffectUtils';
var HeadCellResize = function (props) {
    var _a = props.column, key = _a.key, style = _a.style, dispatch = props.dispatch, currentWidth = props.currentWidth;
    var minWidth = getMinWidth(style);
    return (React.createElement("div", { className: defaultOptions.css.theadCellResize, draggable: 'false', onMouseDown: function (mouseDownEvent) {
            var startX = mouseDownEvent.screenX - mouseDownEvent.currentTarget.parentElement.offsetWidth;
            var mouseMoveStop = getEventListenerEffect('mousemove', getMouseMove(currentWidth, minWidth, startX, dispatch));
            var mouseUpStop = getEventListenerEffect('mouseup', function (event) {
                var newWidth = getValidatedWidth(event.screenX - startX, minWidth);
                dispatch(resizeColumn(key, newWidth));
                dispatch({ type: HeadCellResizeStateAction, width: newWidth });
                mouseUpStop();
                mouseMoveStop();
            });
        } }, "\u00A0"));
};
export default HeadCellResize;