var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import defaultOptions from '../../defaultOptions';
import { getElementCustomization } from '../../Utils/ComponentUtils';
import CellEditor from '../CellEditor/CellEditor';
import CellText from '../CellText/CellText';
var CellComponent = function (props) {
    var childComponents = props.childComponents, style = props.column.style, isEditableCell = props.isEditableCell;
    var _a = getElementCustomization({
        className: defaultOptions.css.cell,
        style: style
    }, props, childComponents.cell), elementAttributes = _a.elementAttributes, content = _a.content;
    return (React.createElement("td", __assign({}, elementAttributes), content ||
        (isEditableCell ?
            (React.createElement(CellEditor, __assign({}, props)))
            :
                (React.createElement(CellText, __assign({}, props))))));
};
export default CellComponent;