var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { updateGroupsExpanded } from '../../actionCreators';
import defaultOptions from '../../defaultOptions';
import { getElementCustomization } from '../../Utils/ComponentUtils';
import EmptyCells from '../EmptyCells/EmptyCells';
var GroupRowContent = function (props) {
    var childComponents = props.childComponents, contentColSpan = props.contentColSpan, dispatch = props.dispatch, groupIndex = props.groupIndex, groupKey = props.groupKey, isExpanded = props.isExpanded, text = props.text;
    var _a = getElementCustomization({
        className: defaultOptions.css.groupCell,
        colSpan: contentColSpan
    }, props, childComponents.groupCell), elementAttributes = _a.elementAttributes, content = _a.content;
    return (React.createElement(React.Fragment, null,
        React.createElement(EmptyCells, { count: groupIndex }),
        React.createElement("td", __assign({}, elementAttributes),
            React.createElement("div", { className: 'ka-group-cell-content' },
                React.createElement("div", { onClick: function () {
                        dispatch(updateGroupsExpanded(groupKey));
                    }, className: isExpanded
                        ? defaultOptions.css.iconGroupArrowExpanded : defaultOptions.css.iconGroupArrowCollapsed }),
                content || React.createElement("div", { className: 'ka-group-text' }, text)))));
};
export default GroupRowContent;