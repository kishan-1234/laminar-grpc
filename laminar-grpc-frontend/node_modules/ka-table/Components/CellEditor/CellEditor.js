var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import defaultOptions from '../../defaultOptions';
import { EditingMode } from '../../enums';
import { getCellEditorDispatchHandler } from '../../Utils/CellUtils';
import { getElementCustomization } from '../../Utils/ComponentUtils';
import CellEditorState from '../CellEditorState/CellEditorState';
var CellEditor = function (props) {
    var childComponents = props.childComponents, dispatch = props.dispatch, editingMode = props.editingMode;
    var _a = getElementCustomization({
        className: "" + defaultOptions.css.cellEditor
    }, props, childComponents.cellEditor), elementAttributes = _a.elementAttributes, content = _a.content;
    return (React.createElement("div", __assign({}, elementAttributes), content || (editingMode === EditingMode.Cell
        ? React.createElement(CellEditorState, __assign({}, props, { dispatch: getCellEditorDispatchHandler(dispatch), autoFocus: true }))
        : React.createElement(CellEditorState, __assign({}, props)))));
};
export default CellEditor;