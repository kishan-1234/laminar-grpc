var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import defaultOptions from '../../defaultOptions';
import { FilteringMode } from '../../enums';
import { getElementCustomization } from '../../Utils/ComponentUtils';
import FilterRow from '../FilterRow/FilterRow';
import HeadRow from '../HeadRow/HeadRow';
export var TableHead = function (props) {
    var areAllRowsSelected = props.areAllRowsSelected, childComponents = props.childComponents, columns = props.columns, dispatch = props.dispatch, filteringMode = props.filteringMode, groupColumnsCount = props.groupColumnsCount, sortingMode = props.sortingMode, theadRef = props.theadRef;
    var _a = getElementCustomization({
        className: defaultOptions.css.thead,
    }, __assign(__assign({}, props), { dispatch: dispatch }), childComponents.tableHead), elementAttributes = _a.elementAttributes, content = _a.content;
    return (React.createElement("thead", __assign({}, elementAttributes, { ref: theadRef }), content || (React.createElement(React.Fragment, null,
        React.createElement(HeadRow, { areAllRowsSelected: areAllRowsSelected, childComponents: childComponents, columns: columns, dispatch: dispatch, groupColumnsCount: groupColumnsCount, sortingMode: sortingMode }),
        filteringMode === FilteringMode.FilterRow &&
            (React.createElement(FilterRow, { childComponents: childComponents, columns: columns, dispatch: dispatch, groupColumnsCount: groupColumnsCount }))))));
};