var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import { SortDirection, SortingMode } from '../enums';
import { getValueByColumn } from './DataUtils';
export var sortData = function (columns, data) {
    var sortedColumn = columns.find(function (column) { return column.sortDirection; });
    if (!sortedColumn) {
        return data;
    }
    var sortFunc = sortedColumn.sortDirection === SortDirection.Ascend
        ? ascendSort(sortedColumn) : descendSort(sortedColumn);
    var newData = __spreadArrays(data).sort(sortFunc);
    return newData;
};
export var ascendSort = function (sortedColumn) {
    return function (a, b) {
        var aValue = getValueByColumn(a, sortedColumn);
        var bValue = getValueByColumn(b, sortedColumn);
        if (aValue === bValue) {
            return 0;
        }
        else if (aValue == null) {
            return -1;
        }
        else if (bValue == null) {
            return 1;
        }
        return aValue < bValue ? -1 : 1;
    };
};
export var descendSort = function (sortedColumn) {
    return function (a, b) {
        var aValue = getValueByColumn(a, sortedColumn);
        var bValue = getValueByColumn(b, sortedColumn);
        if (aValue === bValue) {
            return 0;
        }
        else if (aValue == null) {
            return 1;
        }
        else if (bValue == null) {
            return -1;
        }
        return aValue > bValue ? -1 : 1;
    };
};
export var isSortingEnabled = function (sortingMode) { return sortingMode === SortingMode.Single; };