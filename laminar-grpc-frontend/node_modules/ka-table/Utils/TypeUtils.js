var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { DataType } from '../enums';
import { getValueByColumn, replaceValue } from './DataUtils';
export var convertToColumnTypes = function (data, columns) {
    var newData = data.map(function (d) {
        var nd = __assign({}, d);
        columns.forEach(function (c) {
            var value = getValueByColumn(nd, c);
            if (value != null) {
                switch (c.dataType) {
                    case DataType.String:
                        if (value.constructor !== String) {
                            nd = replaceValue(nd, c, value.toString());
                        }
                        break;
                    case DataType.Number:
                        if (value.constructor !== Number) {
                            nd = replaceValue(nd, c, Number(value));
                        }
                        break;
                    case DataType.Date:
                        if (value.constructor !== Date) {
                            nd = replaceValue(nd, c, new Date(value));
                        }
                        break;
                    case DataType.Boolean:
                        if (value.constructor !== Boolean) {
                            nd = replaceValue(nd, c, toBoolean(value));
                        }
                        break;
                }
            }
        });
        return nd;
    });
    return newData;
};
export var toBoolean = function (value) {
    if (typeof value === 'string') {
        switch (value.toLowerCase().trim()) {
            case 'true':
            case 'yes':
            case '1': return true;
            case 'false':
            case 'no':
            case '0':
            case null: return false;
        }
    }
    return Boolean(value);
};
export function isFunction(variableToCheck) {
    if (variableToCheck instanceof Function) {
        return true;
    }
    return false;
}